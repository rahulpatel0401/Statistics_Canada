<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='EN_APEI-Can-Prov_Terr' inline='true' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EN_APEI-Can-Prov_Terr' name='textscan.1ac4xtj12fq0cv10f7toc0lnuegl'>
            <connection class='textscan' directory='C:/Users/RAHUL/Documents/Advance-Energy/Data' filename='EN_APEI-Can-Prov_Terr.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ac4xtj12fq0cv10f7toc0lnuegl' name='EN_APEI-Can-Prov_Terr.csv' table='[EN_APEI-Can-Prov_Terr#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Index' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Source' ordinal='2' />
            <column datatype='string' name='Sector' ordinal='3' />
            <column datatype='string' name='Subsector' ordinal='4' />
            <column datatype='string' name='Is it a total' ordinal='5' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
            <column datatype='real' name='TPM (t)' ordinal='7' />
            <column datatype='real' name='PM10 (t)' ordinal='8' />
            <column datatype='real' name='PM25 (t)' ordinal='9' />
            <column datatype='real' name='SOX (t)' ordinal='10' />
            <column datatype='real' name='NOX (t)' ordinal='11' />
            <column datatype='real' name='VOC (t)' ordinal='12' />
            <column datatype='real' name='CO (t)' ordinal='13' />
            <column datatype='real' name='NH3 (t)' ordinal='14' />
            <column datatype='real' name='Pb (kg)' ordinal='15' />
            <column datatype='real' name='Cd (kg)' ordinal='16' />
            <column datatype='real' name='Hg (kg)' ordinal='17' />
            <column datatype='real' name='D/F (gTEQ)' ordinal='18' />
            <column datatype='integer' name='B(a)p' ordinal='19' />
            <column datatype='integer' name='B(b)f' ordinal='20' />
            <column datatype='real' name='B(k)f' ordinal='21' />
            <column datatype='real' name='I(1,2,3-cd)p' ordinal='22' />
            <column datatype='real' name='PAH (kg)' ordinal='23' />
            <column datatype='real' name='HCB (g)' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ac4xtj12fq0cv10f7toc0lnuegl' name='EN_APEI-Can-Prov_Terr.csv' table='[EN_APEI-Can-Prov_Terr#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Index' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Source' ordinal='2' />
            <column datatype='string' name='Sector' ordinal='3' />
            <column datatype='string' name='Subsector' ordinal='4' />
            <column datatype='string' name='Is it a total' ordinal='5' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
            <column datatype='real' name='TPM (t)' ordinal='7' />
            <column datatype='real' name='PM10 (t)' ordinal='8' />
            <column datatype='real' name='PM25 (t)' ordinal='9' />
            <column datatype='real' name='SOX (t)' ordinal='10' />
            <column datatype='real' name='NOX (t)' ordinal='11' />
            <column datatype='real' name='VOC (t)' ordinal='12' />
            <column datatype='real' name='CO (t)' ordinal='13' />
            <column datatype='real' name='NH3 (t)' ordinal='14' />
            <column datatype='real' name='Pb (kg)' ordinal='15' />
            <column datatype='real' name='Cd (kg)' ordinal='16' />
            <column datatype='real' name='Hg (kg)' ordinal='17' />
            <column datatype='real' name='D/F (gTEQ)' ordinal='18' />
            <column datatype='integer' name='B(a)p' ordinal='19' />
            <column datatype='integer' name='B(b)f' ordinal='20' />
            <column datatype='real' name='B(k)f' ordinal='21' />
            <column datatype='real' name='I(1,2,3-cd)p' ordinal='22' />
            <column datatype='real' name='PAH (kg)' ordinal='23' />
            <column datatype='real' name='HCB (g)' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subsector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subsector]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Subsector</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is it a total</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Is it a total]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Is it a total</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TPM (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TPM (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>TPM (t)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM10 (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM10 (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>PM10 (t)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PM25 (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PM25 (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>PM25 (t)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOX (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SOX (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>SOX (t)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOX (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NOX (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>NOX (t)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOC (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VOC (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>VOC (t)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>CO (t)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NH3 (t)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NH3 (t)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>NH3 (t)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pb (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pb (kg)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Pb (kg)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cd (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cd (kg)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Cd (kg)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hg (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hg (kg)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>Hg (kg)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>D/F (gTEQ)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[D/F (gTEQ)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>D/F (gTEQ)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B(a)p</remote-name>
            <remote-type>20</remote-type>
            <local-name>[B(a)p]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>B(a)p</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B(b)f</remote-name>
            <remote-type>20</remote-type>
            <local-name>[B(b)f]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>B(b)f</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B(k)f</remote-name>
            <remote-type>5</remote-type>
            <local-name>[B(k)f]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>B(k)f</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>I(1,2,3-cd)p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[I(1,2,3-cd)p]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>I(1,2,3-cd)p</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAH (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAH (kg)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>PAH (kg)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HCB (g)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HCB (g)]</local-name>
            <parent-name>[EN_APEI-Can-Prov_Terr.csv]</parent-name>
            <remote-alias>HCB (g)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' hidden='true' name='[B(a)p]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[B(b)f]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[B(k)f]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
      <column caption='Totel Emission' datatype='real' name='[Calculation_221802291414843392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[CO (t)]+[NOX (t)]+[SOX (t)]' />
      </column>
      <column datatype='real' hidden='true' name='[Cd (kg)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[D/F (gTEQ)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[HCB (g)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Hg (kg)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[I(1,2,3-cd)p]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Index]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Is it a total]' role='dimension' type='nominal' />
      <column datatype='real' name='[NH3 (t)]' role='measure' type='quantitative' />
      <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[PAH (kg)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[PM10 (t)]' role='measure' type='quantitative' />
      <column datatype='real' name='[PM25 (t)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Pb (kg)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AB&quot;' value='Alberta' />
          <alias key='&quot;BC&quot;' value='British Columbia' />
          <alias key='&quot;CA&quot;' value='Canada' />
          <alias key='&quot;MB&quot;' value='Manitoba' />
          <alias key='&quot;NB&quot;' value='New Brunswick' />
          <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
          <alias key='&quot;NS&quot;' value='Nova Scotia' />
          <alias key='&quot;NT&quot;' value='Northwest Territories' />
          <alias key='&quot;NU&quot;' value='Nunavut' />
          <alias key='&quot;ON&quot;' value='Ontario' />
          <alias key='&quot;PE&quot;' value='Prince Edward Island' />
          <alias key='&quot;QC&quot;' value='Quebec' />
          <alias key='&quot;SK&quot;' value='Saskatchewan' />
          <alias key='&quot;YT&quot;' value='Yukon Territory' />
        </aliases>
      </column>
      <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='string' name='[Source]' role='dimension' type='nominal' />
      <column datatype='string' name='[Subsector]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[TPM (t)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[VOC (t)]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='EN_APEI-Can-Prov_Terr.csv' datatype='table' name='[__tableau_internal_object_id__].[EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D]' role='measure' type='quantitative' />
      <column-instance column='[NH3 (t)]' derivation='Attribute' name='[attr:NH3 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Avg' name='[avg:CO (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOX (t)]' derivation='Avg' name='[avg:NOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='Avg' name='[avg:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOC (t)]' derivation='Avg' name='[avg:VOC (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOC (t)]' derivation='Count' name='[cnt:VOC (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Sum' name='[cum:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[diff:sum:CO (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[diff:sum:CO (t):qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[diff:sum:CO (t):qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[diff:sum:CO (t):qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-type='Field' type='Difference'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[diff:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[NH3 (t)]' derivation='None' name='[none:NH3 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
      <column-instance column='[Subsector]' derivation='None' name='[none:Subsector:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO (t)]' derivation='Avg' name='[pcdf:avg:CO (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Avg' name='[pcdf:avg:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[NOX (t)]' derivation='Avg' name='[pcdf:avg:NOX (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[NOX (t)]' derivation='Avg' name='[pcdf:avg:NOX (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[SOX (t)]' derivation='Avg' name='[pcdf:avg:SOX (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[SOX (t)]' derivation='Avg' name='[pcdf:avg:SOX (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[pcdf:sum:CO (t):qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[pcdf:sum:CO (t):qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[pcdf:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[NOX (t)]' derivation='Sum' name='[pcdf:sum:NOX (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[NOX (t)]' derivation='Sum' name='[pcdf:sum:NOX (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[SOX (t)]' derivation='Sum' name='[pcdf:sum:SOX (t):qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[SOX (t)]' derivation='Sum' name='[pcdf:sum:SOX (t):qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[pcto:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
        </table-calc>
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[pcva:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctValue'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='5' column='[SOX (t)]' derivation='Percentile' name='[prc5:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[CO (t)]' derivation='Percentile' name='[prc95:CO (t):qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[SOX (t)]' derivation='Percentile' name='[prc95:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Sum' name='[rank:sum:CO (t):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[CO (t)]' derivation='Sum' name='[rank:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' />
          <order field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Source]' />
        </table-calc>
      </column-instance>
      <column-instance column='[NH3 (t)]' derivation='Stdev' name='[std:NH3 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='Stdev' name='[std:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='StdevP' name='[stp:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[B(b)f]' derivation='Sum' name='[sum:B(b)f:qk]' pivot='key' type='quantitative' />
      <column-instance column='[B(k)f]' derivation='Sum' name='[sum:B(k)f:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):ok]' pivot='key' type='ordinal' />
      <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[HCB (g)]' derivation='Sum' name='[sum:HCB (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NH3 (t)]' derivation='Sum' name='[sum:NH3 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOX (t)]' derivation='Sum' name='[sum:NOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM25 (t)]' derivation='Sum' name='[sum:PM25 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='Sum' name='[sum:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[TPM (t)]' derivation='Sum' name='[sum:TPM (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOC (t)]' derivation='Sum' name='[sum:VOC (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Var' name='[var:CO (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NH3 (t)]' derivation='Var' name='[var:NH3 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NOX (t)]' derivation='Var' name='[var:NOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[PM25 (t)]' derivation='Var' name='[var:PM25 (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='Var' name='[var:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='VarP' name='[vrp:CO (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SOX (t)]' derivation='VarP' name='[vrp:SOX (t):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO (t)]' derivation='Sum' name='[win:sum:CO (t):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[NOX (t)]' derivation='Sum' name='[win:sum:NOX (t):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[SOX (t)]' derivation='Sum' name='[win:sum:SOX (t):qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:B(k)f:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:VOC (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[cnt:VOC (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:SOX (t):qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:SOX (t):qk:3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[prc5:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[prc95:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[std:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[stp:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:VOC (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[var:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[vrp:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:SOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:NOX (t):qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:B(b)f:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[var:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:NOX (t):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:TPM (t):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[attr:NH3 (t):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:NH3 (t):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[std:NH3 (t):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NH3 (t):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[var:NH3 (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[cum:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[diff:sum:CO (t):qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[diff:sum:CO (t):qk:2]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[diff:sum:CO (t):qk:4]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[diff:sum:CO (t):qk:5]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[diff:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:CO (t):qk:3]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:CO (t):qk:4]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcto:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcva:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[prc95:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[rank:sum:CO (t):qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[rank:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[var:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[vrp:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:CO (t):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:HCB (g):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:PM25 (t):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[var:PM25 (t):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:CO (t):ok]' type='palette'>
            <map to='#499894'>
              <bucket>73133.193611940005</bucket>
            </map>
            <map to='#499894'>
              <bucket>119262.59262691002</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>66903.207414983</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>88640.791170799988</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2424261.634476366</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>70563.501764000001</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>100383.16532761004</bucket>
            </map>
            <map to='#79706e'>
              <bucket>77565.563234799993</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>74777.122226514024</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>71428.468774501991</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>103085.16030266799</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>85016.350600000005</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>67137.603413885969</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>90712.238036653027</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81922.300476000004</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>71780.394315791986</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>103733.73143919</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>79731.540799999988</bucket>
            </map>
            <map to='#d37295'>
              <bucket>80114.587599999984</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>84427.297920370969</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>85822.333967964019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>75386.492000000013</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>72848.042199999996</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>112236.85294915002</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>67475.280488285018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>94287.030083289996</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>81771.907620190002</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>75790.473253132979</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>69284.637036200016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99039.773821535011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Source:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electric Power Generation (Utilities)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dust&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oil and Gas Industry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fires&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agriculture&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GRAND TOTAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ore and Mineral Industries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Incineration and Waste&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Transportation and Mobile Equipment&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paints and Solvents&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Commercial / Residential / Institutional&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Unspecified&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;QC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NU&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sector:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Off-road Diesel Vehicles and Equipment&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tire Wear and Brake Lining&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chemicals Industry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Upstream Oil and Gas Industry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abrasives Manufacturing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dry Cleaning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waste Materials&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asphalt Paving Industry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fuel Use&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mine Tailings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Surface Coatings&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Natural Gas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Commercial and Institutional Fuel Combustion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Human&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other (Commercial / Residential / Institutional)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waste Treatment and Disposal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Light-duty Gasoline Trucks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cigarette Smoking&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Non-Ferrous Refining and Smelting Industry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vehicle Manufacturing (Engines, Parts, Assembly, Painting)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Off-road Gasoline/LPG/NG Vehicles and Equipment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakeries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;General Solvent Use&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mineral Products Industry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Textiles&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Air Transportation&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Light-duty Diesel Trucks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Printing&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Marine Transportation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Electronics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marine Cargo Handling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Residential Fuel Combustion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crematoriums&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other (Electric Power Generation)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plastics Manufacturing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biofuel Production&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glass Manufacturing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mining and Rock Quarrying&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Commercial Cooking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iron and Steel Industry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wood Products&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Heavy-duty Diesel Vehicles&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Heavy-duty LPG/NG Vehicles&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Heavy-duty Gasoline Vehicles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Construction Fuel Combustion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iron Ore Industry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other (Manufacturing)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crop Production&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prescribed Burning&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Light-duty LPG/NG Trucks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downstream Oil and Gas Industry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pulp and Paper Industry&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Light-duty Gasoline Vehicles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waste Incineration&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rail Transportation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cement and Concrete Industry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grain Industry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unpaved Roads&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aluminium Industry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food Preparation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Service Stations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Construction Operations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paved Roads&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Motorcycles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Light-duty Diesel Vehicles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coal Transportation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Home Firewood Burning&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Light-duty LPG/NG Vehicles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Animal Production&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Foundries&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Metal Fabrication&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Structural Fires&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Subsector:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Light-duty Diesel Vehicles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other (Electric Power Generation)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Natural Gas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Light-duty LPG/NG Trucks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Light-duty Gasoline Trucks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heavy-duty Gasoline Vehicles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rail Transportation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Transportation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Off-road Diesel Vehicles and Equipment&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heavy-duty LPG/NG Vehicles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Light-duty LPG/NG Vehicles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marine Transportation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Off-road Gasoline/LPG/NG Vehicles and Equipment&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tire Wear and Brake Lining&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diesel&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Waste Materials&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Light-duty Diesel Trucks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Motorcycles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Light-duty Gasoline Vehicles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heavy-duty Diesel Vehicles&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='EN_APEI-Can-Prov_Terr.csv' id='EN_APEI-Can-Prov_Terr.csv_C5E2271C4A374EEBA140D08A5D15EF3D'>
            <properties context=''>
              <relation connection='textscan.1ac4xtj12fq0cv10f7toc0lnuegl' name='EN_APEI-Can-Prov_Terr.csv' table='[EN_APEI-Can-Prov_Terr#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='Index' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='string' name='Source' ordinal='2' />
                  <column datatype='string' name='Sector' ordinal='3' />
                  <column datatype='string' name='Subsector' ordinal='4' />
                  <column datatype='string' name='Is it a total' ordinal='5' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
                  <column datatype='real' name='TPM (t)' ordinal='7' />
                  <column datatype='real' name='PM10 (t)' ordinal='8' />
                  <column datatype='real' name='PM25 (t)' ordinal='9' />
                  <column datatype='real' name='SOX (t)' ordinal='10' />
                  <column datatype='real' name='NOX (t)' ordinal='11' />
                  <column datatype='real' name='VOC (t)' ordinal='12' />
                  <column datatype='real' name='CO (t)' ordinal='13' />
                  <column datatype='real' name='NH3 (t)' ordinal='14' />
                  <column datatype='real' name='Pb (kg)' ordinal='15' />
                  <column datatype='real' name='Cd (kg)' ordinal='16' />
                  <column datatype='real' name='Hg (kg)' ordinal='17' />
                  <column datatype='real' name='D/F (gTEQ)' ordinal='18' />
                  <column datatype='integer' name='B(a)p' ordinal='19' />
                  <column datatype='integer' name='B(b)f' ordinal='20' />
                  <column datatype='real' name='B(k)f' ordinal='21' />
                  <column datatype='real' name='I(1,2,3-cd)p' ordinal='22' />
                  <column datatype='real' name='PAH (kg)' ordinal='23' />
                  <column datatype='real' name='HCB (g)' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Co,sox,nox'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[win:sum:CO (t):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[NOX (t)]' derivation='Sum' name='[win:sum:NOX (t):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[SOX (t)]' derivation='Sum' name='[win:sum:SOX (t):qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' />
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' />
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:SOX (t):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-table' value-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:SOX (t):qk]' z-order='1' />
            <reference-line axis-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:NOX (t):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-table' value-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:NOX (t):qk]' z-order='2' />
            <reference-line axis-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:CO (t):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-table' value-column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:CO (t):qk]' z-order='3' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:SOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:NOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:CO (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:SOX (t):qk] + ([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:NOX (t):qk] + [federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[win:sum:CO (t):qk]))</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{89FE486E-4404-42C2-934F-14AA74A7BDD6}' />
    </worksheet>
    <worksheet name='Co_ontario'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;ON&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Coal&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Diesel&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty Gasoline Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty LPG/NG Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Trucks&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Natural Gas&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Diesel Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Gasoline/LPG/NG Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Other (Electric Power Generation)&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Waste Materials&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{E57E2E4F-D237-4127-B37F-4EED3E736070}' />
    </worksheet>
    <worksheet name='Co_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;AB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;MB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;ON&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;QC&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;SK&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{40A37B01-9C4D-4003-8C39-E6E8F60245EA}' />
    </worksheet>
    <worksheet name='Growth rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Avg' name='[pcdf:avg:CO (t):qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[NOX (t)]' derivation='Avg' name='[pcdf:avg:NOX (t):qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[SOX (t)]' derivation='Avg' name='[pcdf:avg:SOX (t):qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Year]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' />
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Year:ok]' />
              <groupfilter function='member' level='[yr:Year:ok]' member='1990' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='33' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2018</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;</value>
                <value>-0.039467582133019152</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2018</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk:1]&quot;</value>
                <value>-0.014477422843417465</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2018</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk:1]&quot;</value>
                <value>-0.031691516766041206</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1993</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;</value>
                <value>-0.021772654110172152</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1997</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:NOX (t):qk:1]&quot;</value>
                <value>0.032489573355905854</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1993</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:CO (t):qk:1]&quot;</value>
                <value>0.0090749638509579622</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
                  <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1992</value>
                <value>&quot;[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[pcdf:avg:SOX (t):qk:1]&quot;</value>
                <value>0.028018852426257235</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{09F02B52-064A-4ACF-9F70-748A6F1231FE}' />
    </worksheet>
    <worksheet name='NOx_ontario'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOX (t)]' derivation='Sum' name='[sum:NOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;ON&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty Diesel Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Trucks&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Diesel Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Gasoline/LPG/NG Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Rail Transportation&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{4B53FF60-17AE-49AA-BF29-9F829DBBA782}' />
    </worksheet>
    <worksheet name='NOx_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOX (t)]' derivation='Sum' name='[sum:NOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;AB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;MB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;ON&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;QC&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;SK&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{019F740D-326D-428D-82A8-A6790003338D}' />
    </worksheet>
    <worksheet name='Pollution map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column caption='Totel Emission' datatype='real' name='[Calculation_221802291414843392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[CO (t)]+[NOX (t)]+[SOX (t)]' />
            </column>
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_221802291414843392]' derivation='Avg' name='[avg:Calculation_221802291414843392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;AB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;BC&quot;' />
              <groupfilter from='&quot;MB&quot;' function='range' level='[none:Region:nk]' to='&quot;YT&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' />
              <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Longitude (generated)]' field-type='quantitative' max='-5624200.7909321226' min='-15932940.80352886' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Latitude (generated)]' field-type='quantitative' max='11459833.617156766' min='5430351.5167564582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:Calculation_221802291414843392:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:Calculation_221802291414843392:qk]' />
              <text column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' />
              <text column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:Calculation_221802291414843392:qk]' />
              <lod column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' />
              <geometry column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Latitude (generated)]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3FBFDD02-95E4-4D47-84F2-6E9C2C59E235}' />
    </worksheet>
    <worksheet name='SOx_alberta'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[SOX (t)]' derivation='Sum' name='[sum:SOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;AB&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='member' level='[none:Sector:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' />
              <lod column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{640BD893-802D-4B5F-947F-730FB077EE66}' />
    </worksheet>
    <worksheet name='SOx_region'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AB&quot;' value='Alberta' />
                <alias key='&quot;BC&quot;' value='British Columbia' />
                <alias key='&quot;CA&quot;' value='Canada' />
                <alias key='&quot;MB&quot;' value='Manitoba' />
                <alias key='&quot;NB&quot;' value='New Brunswick' />
                <alias key='&quot;NL&quot;' value='Newfoundland and Labrador' />
                <alias key='&quot;NS&quot;' value='Nova Scotia' />
                <alias key='&quot;NT&quot;' value='Northwest Territories' />
                <alias key='&quot;NU&quot;' value='Nunavut' />
                <alias key='&quot;ON&quot;' value='Ontario' />
                <alias key='&quot;PE&quot;' value='Prince Edward Island' />
                <alias key='&quot;QC&quot;' value='Quebec' />
                <alias key='&quot;SK&quot;' value='Saskatchewan' />
                <alias key='&quot;YT&quot;' value='Yukon Territory' />
              </aliases>
            </column>
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[SOX (t)]' derivation='Sum' name='[sum:SOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;AB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NB&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NL&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;NS&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;ON&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;SK&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' direction='ASC' using='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' />
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{56A2C575-0DB5-4E6C-B611-EF596888F53D}' />
    </worksheet>
    <worksheet name='electricity_generation'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subsector]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subsector]' derivation='None' name='[none:Subsector:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOX (t)]' derivation='Sum' name='[sum:NOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SOX (t)]' derivation='Sum' name='[sum:SOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Electric Power Generation (Utilities)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subsector:nk]' />
              <groupfilter function='member' level='[none:Subsector:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk] + ([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk] + [federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]))</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{87FD6EA7-CF49-41E0-BB2B-6E3AFD953CAE}' />
    </worksheet>
    <worksheet name='transport'>
      <table>
        <view>
          <datasources>
            <datasource caption='EN_APEI-Can-Prov_Terr' name='federated.0jd5dxu0kn71ta16xbb8x0kbkkim' />
          </datasources>
          <datasource-dependencies datasource='federated.0jd5dxu0kn71ta16xbb8x0kbkkim'>
            <column datatype='real' name='[CO (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[NOX (t)]' role='measure' type='quantitative' />
            <column datatype='real' name='[SOX (t)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='string' name='[Source]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subsector]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Source]' derivation='None' name='[none:Source:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subsector]' derivation='None' name='[none:Subsector:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO (t)]' derivation='Sum' name='[sum:CO (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[NOX (t)]' derivation='Sum' name='[sum:NOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SOX (t)]' derivation='Sum' name='[sum:SOX (t):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Air Transportation&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty Diesel Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty Gasoline Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Heavy-duty LPG/NG Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Diesel Trucks&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Diesel Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Trucks&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty Gasoline Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty LPG/NG Trucks&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Light-duty LPG/NG Vehicles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Marine Transportation&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Motorcycles&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Diesel Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Off-road Gasoline/LPG/NG Vehicles and Equipment&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Rail Transportation&quot;' />
              <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Tire Wear and Brake Lining&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]'>
            <groupfilter function='member' level='[none:Source:nk]' member='&quot;Transportation and Mobile Equipment&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' direction='ASC' />
          <slices>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</column>
            <column>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='18' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:NOX (t):qk] + ([federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:SOX (t):qk] + [federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):qk]))</rows>
        <cols>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{E50F7364-51A7-4196-9EE3-2C7977BFD181}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='electricity_generation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[Multiple Values]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:B(k)f:qk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[sum:CO (t):ok]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[tyr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55908E90-E95D-426E-A93D-0BA06894A759}' />
    </window>
    <window class='worksheet' maximized='true' name='transport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Subsector:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8085D05F-E480-42DF-A9A4-B7A9255F056E}' />
    </window>
    <window class='worksheet' name='Co,sox,nox'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F57F5F4D-C720-47CB-8123-B894DB665F46}' />
    </window>
    <window class='worksheet' name='Co_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9A4120E-0884-4368-9CEF-4942B2DBD33F}' />
    </window>
    <window class='worksheet' name='Co_ontario'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A0519F5-2C77-462B-A3CC-3FAC14B914B7}' />
    </window>
    <window class='worksheet' name='SOx_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{102F0E85-82D5-420D-96FD-0C0403FF87BF}' />
    </window>
    <window class='worksheet' name='SOx_alberta'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B78FB51-0B59-44AE-AD0B-B61728AAF7ED}' />
    </window>
    <window class='worksheet' name='NOx_region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67D4711C-D199-485C-B8DF-0318A008BBC4}' />
    </window>
    <window class='worksheet' name='NOx_ontario'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Sector:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE7E6AEE-93B7-41C9-8F63-8612B3244E5A}' />
    </window>
    <window class='worksheet' name='Pollution map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:Calculation_221802291414843392:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[avg:Calculation_221802291414843392:qk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Region:nk]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D7DE6B3-2177-4453-809D-1E60B1EE59BE}' />
    </window>
    <window class='worksheet' name='Growth rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[:Measure Names]</field>
            <field>[federated.0jd5dxu0kn71ta16xbb8x0kbkkim].[none:Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F1B1AB9-86FA-4FF0-B51E-68CA51463FC0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Co,sox,nox' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WZBc2Xmg95275b5XVmXtC4ACUAAaWwNN9MImmyIp0pQ9CmtsOaTxeKwn
      R3hi/OQ3P9jhiHlz2OMIhxwTtmc0I0siRWpoikNpSDabzd7Z2NcqFGrfl6zKfbnL8UNWVQPd
      mQWgkagN94vIADLr5r0nM89/z/+ffxNSSomLywuIEEIouz0IF5fdxBUAlxcaVwD2AbOzs4Bk
      fn5+t4dy4BCuDbD3+fjtn+J4AuiJw4TMZap6hJAXltdKtIU8ZMwShw+dwGe497OnwbUB9gnn
      X3uNy9fHGGoT/PKDK9y9cZO1UpGrH7zLlU8/xfRGMDSx28Pcl2i7PQCXx6N5/Bzq68ETiNIa
      C9J3eADbLJJIJPAHwvT3dqMqrgB8GVwVyOWFRQghtlaAQqGAZVnP9YKFQoFAIPBcr+Hi8jRs
      CcBOTcxIJLIj13FxeRJcG2CXcKTENG3KVYtC2SRfqiKBz2vykaCXeMiLrqm7McwDT10BkFIy
      evsqN4fHiCa7ee3Vl/G4P8BTY1o2+VKV9XyZtVyZTKFCoVzd+NekalpUTRshPpv2YkMEJDXT
      TEqJ19BIRgN0JkP0tUVpiwdQFXcDrxnUNYKnRm6SV2Mc6+8gv77MjfuzvP7KOQDya8t8dP0e
      v/O1N/jkw3cJxNppj3h4MLdCMJrAya1QrFoM9LSRV+NkFmY4efI4ihBkMhkikQjzqzl+e2+O
      zmSYtliAeMiHz6M9MhH2C5btkC9VSedKpLMlVjJF0tky6/kyhXIVIQSKEGiqwubH+zKfc/Nn
      qpo2hq5y6UQXZw6n0FRXEL4sQghRVwCklDy4c5l470vM379G/8mL+PXP/n7nzi2GhoYYvnWT
      bNnG5/Nz/MQxRu/eAi1Ad5uP+ZkV7kzO8+obXyPmV5FSkslkCIfDjEyv8rNPHqAqAsuRaIpC
      yG8QD/tQhcCWEiklti2xHYnHUOlqCXGoM0bY79nJ76gupu0wvZhhfCHD2PwahZKJEKAoYsfu
      zJbtEPQZvHy0nVP9yX1589htdF2vLwCObfOT7/8/mN5WunoPcfHMcZSNH7ZczHP1+nVOnDhJ
      JpNjbWWJcCiIqXmplCtQKWJoEI6EKGlRssuLnDp57JEVYHhqhZ9+NIqhP6pWPTyUh39QKSWO
      lFRNm2TUT09bhKNdCWIhH5qqoGvKc50AUkrypSr3Z9KMza8xvZRFSp77dZ9kXJbt4PPoXDzW
      wUuH2twV4SlouAJM3b/F8PQqfT1dZFbmyTk+vv7qeQBK+SyZfBGvP4RGFUsYRII+1tJpwtE4
      jlmmULGJBr1YqDhmFd3jeSIBeFIcp/bDK4pA1xQMTcVnaPi8OgGvzuHOOL1tkWc2HE3bZnRm
      jbuTy0wv1ya9qog9ebc1LZvOlhDfuzSI36s//g0u26tA5fw6d0ce0NLRR3cq0ZQfvVkC0IjN
      j2LZDpqq0NMW4UhnnP72KD7P9pPCsh0qZs1oTWdLjMysMj6/jpRyQ3/fe5P+80gp0TWVf/D6
      UVLx4G4PZ8/TUAAKq7MsmT762mKM3L1J3+BLeJqwYbopAGNza/zq2gS62hwBKJSr2M4XHdqb
      KoKqKiQjfjy6iqooqKrYMk5NyyZTqJAvVamYNrYjUQT7ZtJ/nk118ZvnBxjqS+72cPY0j3iC
      H8YfTzH+k+/zl3dn+J3v/QFGk3dAwwEPQz0tqE3SV+9OrpArVb/wuhBiSw1azZaAR+2Mh4+D
      2qTf77u9QggU4O9/+4CFdJ6vnu517YJtqCsAxdVZCp4U//iPLvHptbtUj/Y3ZQUAGBsb4/7E
      LOHWPhzHYXpilFKxQLKtg5WleWLxJNlMmmqlwrGTZ0EIhm9fQwCt7V2spZeRjkRRFEzT5PDR
      E091/f14V39aNgX/5vgSi2sF3jrXR1vMVYnqUffW4I+l8JprvP2r94inupu6AvT396MqtRMK
      IWjv6kXXdbKZNQaHTlMqFbBtB68/QDazDoBtWdi2TSyRJBiK0NbRjW54SLamKBYLzRvcAUNV
      FFYyRf78F7f4wTt3mFvJ1V0BX2TqCkBm+iYtJ7/BH//xH+EpL1FoYozc57c3ZyYe0HfoGLqu
      U8hncRyHVGc35WIBn9+PZZn4/AE8Xh+WaVIs5AmGQlQrZYrFAprmRnNshxACQ1NZSOf5q1/d
      5vvv3GFqKeMKwgb1/QDVPD/84Y8Rmo4v1sl3vvEazQg3X19fZ2lpibmlVdaKDsFgiPX0KhJJ
      V+8AC7PTtHV0s55eRlVrnmFdNyiVCgghiMaT2JaJx+sjl12nUi6RSKa4N7Va1wZw+SJyw5/S
      Fg/w5uleupLhF0ItrEfDXSC7vM58RlBcGGZiXfI7b77SlOTh6elpvF4vy+tF7kwuN81rOr2U
      oVh5vqHcB5GqadOXivDKUCfxkG+3h7PjtLa21t8Fys6PMl9NMTeToa/FQ6EKIePZL+g4Do7j
      sJ4rcnt8yY1w3GU0VTCznGXi7XVS8QCvneymJeLf7WHtKHUFINpziuLb7/DyV17FzC4/Egf0
      LESjUSKRCOsVlVAk03RHmMuXpyIlP7+xRF8qwtnDKXraIi+EalRXACqFLIdOnSUZDWEkQjs9
      JpddQAiBpgqml7I8mFsjGvRy+lAbJ/qSj/Wi72fqb6FYJX70l39Nz5GThMNB3nj1Vdyb9YuB
      EAKPrlGqWLx/c5qPbs/Q3xHj62f78B9AQahrhXpj3fzJP/lHtIQM2lJdaK4j8YVEVRUQgrG5
      Nf7s729sxUYdJOpPbSGYmbhPa98Qq5N3KLobLC80YiNm6sfvD/ObG1PYtrPbQ2oaDe/tXT39
      3Lv6EaYRw/eQolQuZPj48jVAMnr3FjduD1PKpbl65Qozi2mmHgxz7fotitlllnMVxsfHcQ7Y
      XeNFRGxktV29v8BfvH2LTKG820NqCg3dqIFoije++lUCAf8jTjBV9xHwamAVsLQYLUaZ4bE5
      Tpw5y9jwbVB8HO4JsjC3wtjSfYaGToKU2I6DbdtYloXtOEjp4DgHf5fhoCEErGaK/Nv/cINv
      nOvncGdst4f0TDQUgPG7n/KLq5NcOtpJ/+lLBDbsH90wagKhqNhmhaqw8KhQrprYjgDHpFoW
      KLpKeypFLpujPRGqRSkqCqpaC0kWYn+GG7vUVgNHwr//+AGHO2N87WwfIV8THEW7QEMBiMaT
      KOUbDM8FOHbus9fXlucplSpML+ZJhAQFJ8hgb4KRkRE6eg/jFFZZylY53N1OUfqo5FZxHsqk
      eqQCgisA+xpDV5lYzPBnf3+D109189KhNpR99ps2LI24NHmPX35wDcs0GThxntfODz3zxZ53
      RpjL7mFaNm2xAN+6cGjfeJO3rQ6dWV/lzKtv0duepJRf3clxuexDdE1lNVviz39xk7evjFMo
      74/gxIYq0KETL/PR++8R7DhEX3vLTo7JZZ8ihEAVglsTy9wcX+JkfysXjnYQDux+KZtGNBSA
      2Qd3uHxnhHgszYlj/3Anx+Syz1GEACG4Pb7MnYlljvW0cOlEF8E9aCg3ziZRDU4eHWRxLUud
      fHMXl8eibOyf35ta4c7Ecq2eU3eCnrbInhGGhgKgSJvW/hO8+bVW3DKULs+CEAJ1I/R6cjED
      QDLq50hnnOO9LYR2sdpfQwHQDIMPf/633E128Hvf+y4ed8PG5RnZjDgFSGdLfJSZ5Tc3pvAY
      Gomwj3jIRyoRrNWLDfswdiBfpKEA2JaJ8Ec52Z9yVSCXplPzCYHHqE3B1Y3CwnenVrAdB79H
      5/zRds4daX+uZV0anlnVNMqZZa7encAtK+OyE2zGG3l0DduRfHBrhn/5t1e4en8e07KfyzUb
      rgCq7uPNt77N8SP9rgC47AqaqmA7kl9fn+LyyDwXj3Vyoi/ZtIJqsM0KEGvtoLBwn//lX/wf
      lNxwaJddRFMVShWLt69O8H//7BpXRuYpV5szKRuuAOn5KbKmxoVzZ1H3V3iHywFk04CumDbv
      3pjig9sznOpv5eLxjmdK2WxQGnGan7/3KaXVSY5+/Y/RXRXIZQ+xaRRff7DIlfvzHO9t4dxg
      O8mI/6kDLOsKgO4L0dGaYKa4zMLMJPbxTtxG5C57DUURKIrKyEyau5MrdCXDnBtMMdAee2JB
      2LZRtpQOpVIJjzdQ1xCeGhshVxUMDvQwPjZGe88h7GKa5ZxJf0eMsvRRKawRiyea2iDDxaUe
      m+XwQ36DM4dTDPUm8Rralkf68zQsjw5QLmRZXFkDoKVNJ+D9vOvaYXpmloHjp1mcGifZ3cfk
      +H2QCm1RndnZecrCC1IhnnCXD5fnz2ZV7HLV5r2b07x3Ywq/zyDsM4gEvcSCXmJhH0e64lt5
      Cw0FYObBLSbWBGuzo9iBFv7wP/nOowdIwcVLr/Hg3l3KUqPV761Vj1A9+INecgvrjM/O89KZ
      s0jHwZHys5RI23ZTIl2eK4oAhKBcMSlXTJbWC0gpKZZN/stvvURbvNYYvqEAJFrbufHgOloo
      ydGBni8eIC0ejIxQtAWHe1u5dfUqifYenNwyI+M5jvSnCHQcIrc4hYwdRlVr6ZCapqGqKkIo
      W433XFx2Ck1zUDbmIWwjALn1VYqlMoGwj6PH6mSDKTrHTpzcenouttGO56HcgSDQFj7SnJG7
      uDwHGt6CzWoFFA3D0HEVFZeDSt0VwDYrxLuO8WasB0XT3cpwLgeWugJgFte5d+8+6fUcHn+I
      ZGuq6Y3yXFz2AnUFwBtp4/jhKr/56Aq5bHanx7Tn2HSVSCkf+T9Sgtws8uWArD0U6YC0UaSN
      wEFIB4GNgoMibVRFIqSDJiQgUYVESjClio1KVapIoSGFiiM0HKEjhYJQNRRFhYfqKm06fNwS
      M1+OhkawWa1gOdDe3dX0WCAdk0puGVvVQNR+TBQFuY21UftLbQIKak46pESRFioWGjYaJjo2
      ipAb73losj4FAtAUB02aGMJGFxa6sDEUG0PYaMJGEw66cDBUB02R6IpEUySaAFWp9RpWRW07
      7uHHkyAlOBJsCZZTe5iOoGwrVGxBxVGp2ColR8OUGpWNf6toVKRBFX3juU5V6iiaAaqBqmmo
      amPH0ItIQwHwBQIIxyaXL9Hsm0uPvsx/m/oARzVwpMByaj/4w4k3Dz9XaznWwKMTyVAkilKb
      sBvbvk0z2Hfzhio2hEeFh1RPCWzGxDeOhJSyduTmv46EsiUoWoJMVSNX0Sg6BkXHQ176yDs+
      KsKPrXpB86Bo+iOry0FfWRpXhZh4wKlLbzF35yNKFlulEZuBoHa3FCqAm27WTLZuAg/NW0OV
      hD2SVKAKVIHi1t+kBNOBsgU5UyVvqhRtnaKtU3J0itKgLD2Y6JhSx0TD3FhvhaqBUnsoivLI
      Y79QfxeoWsIfb+ejX/+URPcxvG4n0gOLELVVxlAh7LGprTKPFrXa1CAfXlksB0xbUHGgatfU
      s7KjUq4oVKRKRRpUnM/UsLKs/WsJA0cxsIWOVDSEoqGo6pYqrCg7u+rUndqF1Wl++OOfk2hp
      IRYJ1r6Ag70SumzD5nx8eGXRFPBqkloDLQk4bKeawWe2TdWuCVDFEZQshZKtUHE0So5G2amt
      PBkZYkmkMPzh57qi1BWAUOoI/+Qfxbl9/Qoff/QxQ8eOur4Al2dm07bxbcyl0JZdYwPmI8dK
      uchKaYy7uQgPrA6KnhSGx9v01aGuAKxP3eCf/+kPODI4SFd351MZhOV8hnTBJBUPUUXHrhTx
      BwIH3phyaS5CQNLvkPSvccleYzp/n3v5BBNOB8Lfgq43xyit3ya1+xT/8/94fGskT5wRJm3u
      j00R8avMVzKU1RDlXJ6ho/1NGazLi4muwkCkSn94nrI9z/2Ml/uZNpbUDhRfBEVRv/QNtq4A
      CEXBML5E6TppY3iDtCR9zM+ucm96gouXXnfv/i5NQQjwafBSosxLTJKvTjKcDTBcbiOtptD9
      EVT16UIWmru/I3SoZrgzssrhvhSnU/0sTo0SHxpCdZ0vLk0maMD5lgJn5RjZyjj3Mn7Gqm2s
      6ylUXwRFeXwXoiYLgODoyTNbT6NAV/xEUy/h4vJ5FAFRr+Qr3gKvyDHWyuOM5vzM23EsKdhs
      gyERBEwLvxikFqz/kAAUCgUs6/kWACoUCrWBiCh219ehcX8OF5cvjQc4sfH4AtJB2iaZTK1I
      77ZJ8U+PZHVllUg0RDZbIR4Psby8TKIl+UhSvIvLXmDbpPgvQ3Z1nqs3Rnnl4hDXr4/xxuun
      +O2nV/jGN7+FodaC0hzn4DRZ3g7LdpDUmkUoG4VgXfYedQVASsnk/dvcuT9BJNnFhXMvYTzO
      E+aYXL1+D9WxyeRKRAM6U1OzxFpTID8LJW7qgrNHkFKynq+wkM4zn86zmM6TLVaxbAdNVdBU
      ga6qGLqC19BpTwTpT0VJRgOuYOwydVWgqZGbpG0/g73tFNZXuDe1whtfOVfv/Z8hJZVKhfEH
      92nvbqeYc7g/Pk5Xe4yu3sMYmnJgVCApJVXTZno5y93JFSYXM1SqVi3x/zGxLLWbQG2F8Boa
      7YkgA+0x+tujhPyGu2W8gwghRF0BkFIyPnyNePdJFh7cpGfoHP4mKEv7XQBKFYsHc2nuz6SZ
      XclhWjZ6E5o4WLaDlJIjXXHODbbTHg+6grADNLQBpHS4fvkTzDtTdHT3c0R9caPhqqbN9FKG
      m+PLTCysgwRVFVtFmJrBZq3L8fl1RqbTtMUCvHysg4H2aNOu4VKfhirQ+HKBvu4OsquLrJYV
      vnbp/DNfbL+sALbjML2U5fZEbdJXTRtNfbxTpVlIKTEth6Df4GhXgrNHUnu61eh+ZVsVKJte
      5N7IOPH2bgZ6Opviyd3LAmA7DivrRW5PLjM6kyZfNtF3cNLXY9NesB2H1miAM0dSHOqI4dG/
      fOyLy2c0FIBieoFV20dXS5ix0Xt09R/HcwBtACklK5kidyZWGJ1Lk8lX0DRlq27kXsO0aitR
      f3uUM4dTdLaEXEF4BhoKgGOb/OqnP+LagwVe+8Z3eeXUkaZs12UyGTweD5ZlEdgIkbZtG8dx
      0HWdSqWyFYRXLpfx+Xy1eo7FIoqi4PF4KBQKBAIB8vk8UkpCodBTJUxYtsNqtsTw1AojM2ky
      hTK6qtZSCffJZJJSYjsO8ZCPI10Jjve2EA549qzg7lUaCkBhZZqff3yPM8d7uXb7Ad/5znea
      tgKsr6+zvLxMX18fiUSC27dv4zgOfX19vPfee3z7298mk8nw61//mt///d9HSsno6Chzc3O0
      tLQghMBxHEKhEKOjo1y6dAm/37/tdauWzexyjpHpVSYW18mXquiaeiAmjOPUSoK3RHyc6G/l
      RF+tJLjL42m4C+SLpQgrl3nv/U84dPJ8U4tiBQIBhoeHGRoaQgjB4OAgIyMjhMNhurq6kFIy
      PDxMMpnENE10Xcfj8Wz9P5fLUS6XOX78OJlMBp/P98j5pZRUTJvFtQITC+tML2VZzRRxpNwy
      ZD16cybIpmfbrlbALqFZRYKiSFgpElIKKEBValSkhoVBRWqUpEFeiaP4Qqiq9syrjqIIDEUl
      U6jw3s0p3r0+yWB3gpcG2uhsCbklUB5D3ZmQm7lJ5OibvPW7UT55722K1vGmVIWQUrK2tkYk
      EmVkfIau9lZWlhaZmZkhlUoxMzNDNBollUpx7949CoXC1qTXdZ1IJEKlUiEajTIxMUFfXx8A
      +VKVuZUcMytZFtIFVtaLmLa9dZdXVYVmybCUkkq5hFFJk1JX6dDStPvKRAwbn8ZjO2pKCdmq
      YDLvYboUZ9ZuoWrEMbyBZ5qsQghUIVAVGJtb497UComwb6Mbe5JYqPnphAeBuiqQXc7w1z/8
      Caph4Imk+I+++dUnLuq0HZt37OW1PDdHZ/D5/DhSoghBKOBFFWDoGoZhYNs26+vr+Pz+WjyN
      qqBrOma1is/nxbJtbAn5YpVro4tki1VUVTRdrXEcB8usoFQyxGSaTm2F/kCBNr/9SL2iL4Pc
      KH61UlK5mw0x7nRR9rahG82ZrJu7SFXLJhr00NMaYbA7QXsiiKG5O0kNVaBquUQgEgVAFTaW
      Q1PUoLm5ORRFYTGdZ3RiqWkdwFcyRSpm8xopW6aJMPMEZZYYa/R58qQCFl4VqEKhCmNrTbsc
      AJ0s0eY8YHJB50E5yarSiuJtXkWEzDJMjsPb79d2knraInS0hOhIhAh4m1j0aZ/RYBfIYmlh
      hmvXbqL4Y7z15uuPrQohrQp3hu+TL1ZI+DTMUJK+qMa7V0b59tdfBSCdThMKhRiZWeVnH42i
      74EeYVJKbMtCljNE7BW69RV6/QVSfhtN2b3AvZIluJ/1MVppZYlWFF8UTdOb55CX4Gz01Ap4
      dfrbYxzqjNGRCOHZA7/LTmAYRv0VIDc/zP/2pz/gzJmXCOnmIyULGyE0D5GAh2zRQvMEqVby
      LCxBazKC4zhbUaBCCAQCsVHgdTdwbBuzlCNkp+nQVug2MnQlqwT0z3/Q3VMRggacbSlxlkkK
      5hTTeQ9jxQSzdpKqJ/HsJUI2Si+qqorlwP2ZNLcmlvFoKqlEiK5kiP5UhJYv0Xp0P1HfE+zY
      VKq1Oi1CCAzD81hd166WWMuVmJ4cJ+iP4PEJ0gUbHZMTQ7XcnN3oErkZgm1XSujVNK1imR5j
      jb5gmZAhH2u07iWkBEvCUlHlQSHEjNVCRsTBE0bVjaapS1LKjZ5uEr9Xo7MlTG8qQk9rhJDP
      QN1PX9o2NLQBcvPDXJ4scPbMGQLGk0m/ohtY5VV6BgYJenU0TSFuSlR2PgFGSolZrSIq6yTk
      Cl36KgOBPC0JZ18X+BICdAGdQZvO4DpSrlOyYKGoMVMKMWfFWRUtKL7oM9XNeXhHybIlk4sZ
      RmfTOFIS8hkkowG6kmG6W8Mko37UfVQL9PPUtwHMIj/+4V/jTXQRCAS59MpFmnGzfngF+MkH
      I3iMZ98Hhw093jRxKjmCG2pNvy9LZ8DEo+5upeedREoomIKZgsF4KcKc00rFSKB6/E9UIeHJ
      ryO37AefoZNKBOhri9KXihIJevaNQDT0BAOsL03yy998iifYwne+9WZTegRsCkB+9g6X3/4x
      WcJkbB8FEaQgfTiaHyFqfQKEqFX3r/1o4jMbgs+yyoRVIiLTtKtpujxZOgJVgvqLM+Efh+3A
      WllhsuhlrhplRcYpqFE0b3CrS2LTrmU7WI5DyGdsrA4R+lK1JJ+9yrY5wauLcxw6cZ6ViTtU
      bJqSELOJTzG52JJBaGWgthduO1A0BZYUOJvNVwBHiq0C6qrYaI4BaAL8uoNXe/LGEy8aqgIt
      focWf5Fzsogj58hVBTNFDzO5MHNWgrIeQ/EEUTX9mVaIWhtcharl8GBujZGZ9FYUa3sixGBX
      nPZEcM/lNzRcAaRtcvfOHcKtXXS1JZpysc0VwJ6/TvXaXyA0N8Z9N5ESclVYKBlMl0Ms2jHW
      RALhCaMbzUvPlFJStWwCXp2j3S2c7E+SjAaacu5nYdsVoFLMMb2c4XQiiS1pepskl91HCAh7
      IOypMsgqUq5StkeZy+uMF8LM2y3k1JaNFeLL22ub8VeWLbk5vsTV0QWSET+nBlo52t2C19g9
      r3TDFWDk2gfcnCvQalicffM7BJvgLHRXgP2FlJCpCGaLBnPVCIt2jHURRXjCGE1YISzbQRGC
      7tYwJ/qT9Kd2NgV02xWgb/AED6bfQY0N4FUctump7XJAERslB6PeCidYwpFLlC1YKOrMFv0s
      WDFWZQzbCKN9iZ2mzVCYmeUsEwvreA2NQx0xhvqSpOLBpoXKbDuGRn+YGbtD3hTMXfmAucVl
      /uC7bz33wbjsbRQBfh0GIiYDkQyQwbQnWK8ozJU8zFVCrMgYOSI4RgDd8D5RtebNAgO2Ixme
      XuXG2CJBn4f+9igD7VF6WiN4nlOOQ8Oz+gMhYJlAOElHS/i5XNxl/6Orm40sSpymhCOXqNqQ
      Lqsslg1WSiHSToi0E8YxIuhe31YXynoIIfAaOpbtMDK9yp2JZVRF0BoLcKgjzuHOGOFA83wN
      DW0As5znk49/i2ME+crFC011hLk2wIuH5cBySWGqGGDGjLMsW7CNCIbX98Rqk+04WJZDNOil
      uy3MoY443cnwlw6p2dYGGB++wVymSGtIYgOPtYHtKnfvjWArHhI+BSeQoDWocmNkivOn3RLp
      LzqaAu0Bh/ZAjosyR9WZZLmoMlYMMWMlyetJVE8QG3UjUPKLQqEqCqqhUKpaDE+tcnt8GUUR
      tMeDxMM+WiJ+EmE/Yb+Bpql1Qxkl4Pd8tqPVWAXyhTh/tg/LtPE8iYCpBl0dbUwurFMxJcW1
      JarroKhsRYPato1lWTi2XQtSe0EK5bp8EV1AR8ChI5AG0sAwa2XBRCHAeLWFJZnE8UQwDE9D
      1/5mqZ6FdJ6FdH7r9c08aYn8QhvqimnzJ989veWHaCgAimLx7374I/oPH6G3t/uxQuBUctwb
      X+T40UOszs0RMFTWijaGwlaUoqqqaJqGrarYohYS7eKyScIPCX+Rc3KKqj3FXFFnvBhi1k6S
      VRKoT5hHrSigNdpOFSYIdSsUpKEAtHYf5Y2vKhzu7X6iJnlSMUjGA6yurdHW1YmuCxJVUETz
      MrVcXgyEAI8G/WGT/nAaKdPkqjBT9DJViDJnt1DU4ujewFP3BPs8DQVg7N51JuZzKOU1jl74
      2mMdYaruoa/v0W6QQbc6h0sT2PRYD3nKDLGA7SywVlEYz/uYqiZYFS2Yig9UT81jvdE1cnOl
      2NznqVXxsBEP6UUNp2h7Vy+3Rj8g6/Q2NRDOxeVZURVo8Tm0+ApcoIBpT1GyoGgpZKsqRVOj
      4BhUHB1NcdCFg4qNodgoTom4cgg2etw3nNqWZaHrBvncetOS4l1cnge6WnuEPQ6pgEOt63yp
      7rGyWkB7SC1vqN3blonlOERjcTfc2OXAUlcApHTQvEESIQ+LS8u4u5UuB5W6ApCbu8e/+D//
      DfnMMue/+ru4pSZdDip1BSDUcYz/7r/5rwjHWrn2/i+oujuZLgeUuvd2IRTCsSTZrA4AABG/
      SURBVBZe//rv7vR4XFx2lIbKzeS9T/nNlQcUs2t0HDnF977x2k6Oy8VlR2goAAJBvDWFV9cI
      et2QBZeDScOZneo9Qlh36Bo4wlcuvPwEp5Lk1pbJFqtkV5fIFMo4VpWpmdkmDtfFpbk0XAGm
      Ru+gh1uJh/3o2hMkBDsWC/MzqBEdNZ8mr+Zp9yuMzabp6eps5phdXJrGNuHQfj765AaBcJye
      vv7HN5hQdDrbW1koAqqOIi2WcoKWkMcNh3bZO0iJbVs4lgU0EIDCyjT3ppZxLJNKpfKFmOp6
      OGaZ0bEpMnaQgbYoKb/GfM7Er6tuOLTLnkEKgapqKNuFQwdaujl5pEwuX+LI8VNPlA6p6F5e
      On/pkddiyWcfsIvL86ThLdgfjBDwqHzy0QeuI8zlwNJYBxECw+Plja+91ZQWqS4ue5GGAjA/
      dZ9Y12Embn9KydzJIbm47BwNokElrakuRm9dwTIi7grgcmCpKwDZmTv86b/9MbrhwdBVNxza
      5cBSVwDCncf4kz/6T4n4Nebn5p6oSZ6Ly36kgR9giu//6O8JBIIcPXnmiftqZdLLCE8IXZpg
      +PBqgrVMjngs2swxu7g0jboCYASiXLx4AQGouvIkfjDs0hoTCxmENU9AUyh7QnSHFS7fm+eb
      b1xs7qhdXJpEAwGI8fL58091oko+RzzVjpWexrJ1FLvMwpogldj9TiAuLo1oWiyCL9rCwugd
      1go2Hk0hHvRSdFQ0N9zBZQ/TtA1Oofu5cPHCI6+1dTTr7C4uz4ctASgUClgbEXLPi0KhAIAk
      jN3+utvP1GXnkQ4VU0VkMsA2/QGeB5v9AVxc9gJCCLErCnqtRqPrXHDZfXYlyGFlcY6/fedT
      fJFWWloSdLbGSEYDhP0eNE1BcVUjlx1iVwQgLlf4h6EPKTteVqdUFkcM7poBCkoYWxg4QgNF
      QyoaiqqhqDpenw+P14fX68Xv8xDwGiiqQrliUqmaVE0L0zSxTBNVVTEMA0PX8Bg6Po+O32sQ
      DngJBTx4dA1FCBS35uMLT10BsCoFPnj/A5bT63j8Yc68/Apdrc315qoKBDVJ0LDoDVtAEVj+
      wnFSgi2hakM1D5WMoGSrFE0FBwipkqTqoCsSQ3FQlVoCm+kITFtQdRRMR7BmKUxZBjnHi6WF
      cIwQhj+MEYwRj8dpiYVpifgJ+owd7VXrsrvUFYClhQVOnL9EPBzErBQZm5qDBgJQyKzwYHaN
      l4YOcePKFbyRVsKahRNMkAyq3Bye5NxLX75HmBCgiVqPKb8Oten9JLtVcuPxcCRfBcgBy0gJ
      loRKXpBJK6xWDEYtPznC4Iuj+CL4gyH8gRCRkJ9I0EfY7yXg09E1FUUIhGDXOpy7NIe6AtDe
      M8DbP/1LAu0nSc9P8Oa3f6/hCVQjgCKXwCyQKVgEWzQqlQq51WVEDip2LSG+Zvg62La9lSTP
      zm1A1UUToOmSgO7QEdhchVaAMRwJpSwU04KcqbJQ1bhveyhKD1XFj/CEEJ4QmjeIxx8iHAoQ
      CgQIBz2EfB68hobPjSPf89RfAeZnCSc68PoMei++SnpxhkBXV90TeH0+BOCofl599SLDt69j
      eMIYqk26DGFPbaNps2PHw4+9jCIgYEDAkCSxqK065UeOsSXYjqCSERRWFLKmypylkbEMivip
      BrrpO3KMoYF2wn63JexepK4AhIM+0mtZMlML6B4fQ2cu1DsMgIWZCQqFPIvLq6yvLqGHWkiE
      /Xg9KisFG0NYW5NdCIGiKMiHnu9nNlUzjyYJe2zasYEqtZVkHUfOMT5ymf9wOY4VP8bg0aOc
      6G/D53mCOksuO8KuOMJetEbZUkLFhomch+FyCk/nS7z80hE6WsLulu8u0rBRtrTK/Own/x/p
      fJXOwyf52qUzdZsOuzwZQoBXg2OxCseYZL04xZWfRfiV/xjHT5xkaCCF310VdoW6ApCZuU3H
      ud/luz0hPv3gHQomj+0S6fLkRL2St9rXqVgfMXz9Gn/1STdth8/wlVOHiIW8+1413E/UVYEc
      s8iP/+bH2EIl1NrLN7/6SlP6hG2qQM76NNbURwilubsk0izhrAw39Zw7gZQwX1D5cD2Fr/ss
      l84eIxUPuoLwnBFCiLoCUFmfZdGM0ZP0MzE6QsfAIEYTooYymQw+n4+1mWHi9gLL60Vi4QC6
      piKl5P7UIslYiKppUa6Y9LQnWFjN0BYPoygKhVKFBzNLHOpqZTWTp1q16OtsYWRygc7WOGHd
      wp69/OwD3SWkhOWSwkfpFqotp3n1/BC9qSiqm1PxXGgYDGdV8ty5O0x6dYV7I/ebmhS/uLjI
      xMQEVdNiZHKBUrkKwOj0EpZto6oKs0tr5EtlVtfz3Hkwi23XnFmKIjjU1crwxDzxSJBS1eTW
      6AyJSJCRifnmDXKXEAJa/Q7/cdcS3xK/4PbP/w3/1//7Y/7mV1e5NbZIoewWaGo2dXUQf+sg
      R9ducvXaDU5dfB1vEyMDuru7WZ64jaGrdCQ/8y5n8kW62+I8mF5EVRWW0jla4xFSLZ8do6sq
      N8anCfg8FEsVsvkibYkIk/OreA5YJ7+wR/LNjjSWk2Y1c4OR9/xcdpJUA90cGxzg/LEu13Bu
      AnVnTTmzAMEWXn/zpaYWxZJSMjIywtziKq2Gj8n5FXLFMslYiP7OJKNTi8QjAaSEoN/Ca2jM
      LqVRFEEk4ENRFAQCR0qW0llUVUFKiaoc3MA2TYG2gENbIA/kKZnjjN/7mB/cHeKVS68x2N1y
      YD/7TlDfBsjM8i//1ffpOnyCcCjIG6+9+kQVoh/HlhGcW8BeuLllBK/nikRD/obvk1KSzZeI
      bHMMgKzk9rUN8DSULPhwKcJy6DRvXjpHbyrqGs1PSUMjGKCQWebjT64Sbe/n7MkjTfED3Lp1
      CyEEdnoca+wdhNLkJVzayEquuefc4+SrgmvrUazEcc6cHKQtFtztIe0bTp48Wd8RBjAzPkLf
      yZeZv/spRfMIgSbM1e7u7g1PsEU1ryE049lP+gV8z+Gce5sLEtYrY7w3WiDf9wpvvXKCoO95
      fLcHj4b7az0Dg9y9/CG2vwWfa2vtaYSAmNfh9zrnObH2E/7dD/6Cdy7fp2K6jR0eR+NYICmx
      HadmeDZJt3xRY4F2GkfC/XWDq9Zxzr/yKif621xDuQ7bJsUvTg3zr//qb7h/+wZl90ayr1AE
      HI1V+YPEdTIf/xl//jd/x8j0CjsY97hvaCgAtlUll17ktzeGtzWAVxdm+OCTq0irxKe//ZRr
      N+8ycfcmw9MLlHMr/OLdj57DsF2eBE2Bl5MFvuf/iKlf/2v+8ifvMLeScwXhIRoawYFwgqMD
      /QhNZ3p2kcM9bXWPS6S6iKxmKa2t0DZwHGttGtP2YZWyLFQgHg+5bVJ3GY8CrybXKZq/4uN/
      f42P2i5y4cwQrbEg6guuGjUUgMW5SfqGzrL84AZ37t5qKAC2ZWFZFprPS2ZuBcpV/D6dgKaQ
      Kdl4FNw2qXuEoAfeSq2Trf6cqz+/zNtKB7GOAY70ddHXHsNraC+cL6GhAPT0D/LTv/slWqiV
      00OHGp4gvbyA1+sha/loj5go7YfxqQJdF8SroOIaEHsJISDikXytbRVYJVe4ydiHXv62GkdG
      ekl29tHfnaI9Hjxw4SX1aPgJF2YnmF1Jk3QUUl1fb3iCZHsXyfbNZ486YcLu9umeJ2TA6ZYy
      p5nDcuZYm/+Y8RE/H8skRHpp7+rhcHcrrbEAqrL3c7mfloYCoHuCnD15nPnV7BN1infZ/2gK
      JH0OSV8t7shyxlmcULhxM0haacWT6KW9s4uBrlZaIn40df+rsI3XOKtMsG2A37/UgVsn6sVE
      U6Az6NAZzCJlloo9ysJ9jes3gqSVFHqij+ODhzjSlUDXmucv2kkarwA+PyMffMjMWIJvf+t3
      MFwheKHZzGvuC1v0hdeBdYrmPe5+6OP7VjuBjmOcOnaY3lR0X1XWaywAuoGt+Th5qBs3I96l
      Hn4dzidLnJNj5Crj3P+Nn0/pJtB+lFNH++lqjex5u6GhAGTWVijmM1y9cZPUwNEmNlNyOWgI
      AWFDcr6lwHnukSvc487bAT4U3US7j3P8cC9drZE9aTM0FAB/IEx7qoMLF17Ge/B3w1yaSMiA
      V1oLSHmP9fVh7vwiyLtKN/HuY5wa7KUrGUbdI8LQMBhOOhafvPtzfnV5lH/2z/4pviYIgRsM
      9+IiJWSrcDcTZFHpJJAa5MhALz2p2K7VUG1YGAtgZW4C29/Gf/2PLzalIoTLi03NAQdfac0j
      5TDZwgij73u54bRh+lNEEilaW1voao0SD/vQNRXB8y+fWVcAzGKGm3dGmRy7w9TSy/zBd7/6
      XAfh8mKx6Y0+nyxxngmknKCQh6UljdtlL2sygu1NoPsjGL4QHn+QaDhEOOQjGvQR8Op4dK0p
      W6/1BaCUYWk9j4qkf/AY6t414l0OAEJA0ICgYTFAzQkn5SyWA2YFSgWF7JxC1tSYtjwUpY+y
      8GPrQfCE8QbCaLqOpqoIRduIOVNrPSAsk2q1imVWqVYrSLPCP/jmV/D6a1EL9cuiJHr4w/+s
      B6ta4s7dEUyn1fUDuOwoQoCu1h5+3SHhc/isRH1m6zgpoWqBZYLt1JKBHAm2FEhAExJDrTn1
      dA0UWcCoHoXtBACgmE0zNbeE4fFQLJUwgi9erq3L3kcI8Gjwxe2UBomOn3ve0LydnbjHSqbE
      vVvX+LtfvvMEQ5EM377OyIMpVhdmWc0Wsc0yIw/Gn+C9Li67Q8MVoK29m1vvXUb1t/DSQM/j
      z2TmmJ7PcupsH/nVBfK5MtInWEhnOTJQk7vNVkmbUuhmJrnsBhK5NfcaCkC5VKRSqeDRfRw6
      Mvj4k2ohvvGN17l1/Qo+XxRV2CwXBImA/sUeYfbe6BHm8gIiZW3+2bU8lYYCUMhl6RscIhEJ
      oj3BLpBdLXHv/gPwhAmHAnh9Cos5C4/w1MkIU9yMMJddQQqBqqooWm3qN+wTbKse5idHWfGH
      6e3r53GbQJrHz8mTpx55LRxryphdXJ4bdQXArpbJ5suEozH8wbAbDOpyYKmrg3hCCQ73d1Ep
      5pgYn2hqfwAXl71EQyW8XCxQMSXHT5xsSmVoF5e9SEMB8Pn94JjMLyy7KcEuB5aGAjA/PcHQ
      y1/F52Td0oguB5a6AiClpH/oHGvTd2k//BJ+VwVyOaDUFYDM9C3+p3/+v7K4lmdhbhrLrWDo
      ckCpKwDRnlP8D//9PyWgVBl9MO7uArkcWOr6AbJzw/zv/+pHtHV0MXj0OHskfdPFpek0yAfo
      4r/4w/8cAEUzXEeYy4GlrgBongADAwNPdSJpl7ly9RaqN0hUs6gGkvRENd6/Nso33nilKYN1
      cWk2TUvHL6WXae3f7A/gxSxlWKhAzO1a6LKHaZp2b/h9ZNfSFEtVVEUQ0BUypsTj2g8ue5im
      rQBaoIXWwAxq8hA+XWDoCrGKdPsDuOxptgSgUChgWdYznczwhwCLqglVs/aaTa0g1uY1AJyy
      gykiIN2Scy47jGJQLlZQRG1ONm6T+hyQUn6hjovjOAjxxQKqzkaL1s9T7/VmnGPza3jWc0gp
      647vSc/R6PWn+Yz74bPs5PfR6HUhhNhRAXgyHEzTQdcbrw5becWOA0LZtgfuwx9PUpsU223r
      Npo8jY+VSEndH6Ph+xwb2wFtmzLim+NwHBuhqCjbnHvz2M0bzHbj2Po+HvM9PHx87T1i49xP
      8CbAMk1UXX+i79q2bVRV2/bcz+MzblsacWeRLMzOULUlUCCTDXLqZHfDo6dH77K4lqMiFTyG
      lwtnTzU8tlpKM79iszg9giM0Tl+4gH+b+O5P3n+XYDxJsq2TZDyy7Y9SXJ3j9tQKa8sLtHX0
      cPrU8W2+cIe56WksKTDLGWytjcGB1oZHP7h7k/V8kaow8Bpezp0eanjs5Mh9wjEP96bSGJqH
      l880PtY207z767t09qbo6u4h4DMaf0BgbPgW+UKOhTWHwWOD9Hc1HnO1lGNuaQ1FwPzkLKff
      uIS34dEWn374CVXLxOv3kOgaoi8VbjyOkfuEgypjCzkMj4+zJ482PLa4Ps/lm9OkOpJ0d3fj
      8zTu1fX/AyeLaFO66b9HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Co_ontario' width='192'>
      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
      rfdGqUtLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Co_region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Growth rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NOx_ontario' width='192'>
      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
      8/8BryCD+EKdfCYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NOx_region' width='192'>
      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
      DSBpaf4/vIWrnCi2IEoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pollution map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy915NbWZ7n97kW3gOJ9IZkkklXZJHsqq6qrqo2071mZmJ3NqSI3ZBC0r4p
      9Doz7/M/6EkvelFIipV2R7Mzuz2+fTlWFYueSab3mUh4b67RQ/KCABLIBJDIJKunvxEZJIB7
      zzn33N/5nZ8/Qi6XMxVF4XdoxtrTJ+jJGK6ZWaJj4323s7W6gisVw2O3DXB0R2MjkWIk4EMW
      xRO3taXB5PWbAxhVd0inUiQe32c6HOj6no1Ulun3P+r6+kQigSiKBAIBZEVRsNnO7uV8W3Du
      +ltUq1UcdjtCn4S09uI5/p1VvHYblIuDHeARqKVTKDYZRZZO3JarUCKxH2NkbBxBEAYwuqPh
      dLko1sqoPcyXVsz3RMOKIrP0ya9IeL2cnEX8lkKWZZxOZ9/ED6DrOrYBEGGvMDEH1taQy4Hy
      4hHriwsDa/MopOL7hF2Orq83TRNTVnvqw+f1YXO5mXXIv1sAp4mpi5fY0E6fa542Ak4HhZ2t
      M+nLp8g41O4J2gS29vYoFApd3yOIIs5KEVEQfrcAThOSJHH+g49ZMCTKNa3r+0wTdMNgK5ND
      N4xTHGH3cFdLbCw8Z3d3l3K5jGkevcvUajXi8XjP/Zh2B8lSGU03qGn6sdeLgsCPLs6w8c1X
      x47JgizLqNMXqGjab98C2I/FMN4QogFQFIWZW++wns2zlcqwn8uTyBdZTOdYiqeo1DSK1Rq5
      coV0scR6Js8LTWDdFyX8vR+yqrp5URPYL1W67tMEGPDGM+p2IK4t8uzJE372N3/NypNHRxLc
      17/5NbG11Z7fhS8UJucf4peLqxhdEjSAq5Bh/ovPqFSOnydBEJi+ep1NXUDuaXRvOEzT5Nk3
      95AVhTvf+xC1h630NGG32xn+7kf85pe/oJDPEolGcXt8JBMJ5rcTXJibQ7HZ8PkDjPn92Oz2
      +r2X7rwLQCK2x/zTx9grRUI2BbdN7ayUDk4FaMKQy0EtV2BThNWnTxi/ONdxjoNOO5vzjxmZ
      OUcgGOy6D0EQcAxFERSVrVSGc0Ohru4b8XlYjm2xtRnl3PnzXfWjDo8jlMtl87fJCrSzs4P0
      9B5p2cbUdz98Iy1cjx89wul0MjU9jST1piRrtRpbmxsoi08Z8rjaXvN0c4fZkSGUHtvuFqVa
      jXi+SM3hYuTWu3i83sPj1GqsLS0zPDaGy+3uqf0nn3/CRfOAk/dieapoGouCnRsffNjV9bqu
      //aJQIau83R7lylFYPnz33QtF54lrl2/zrnz59sSv2malMtlisVmM6C1tUuyTC6bZVWDZ8ks
      uXK7Lf90n9mhKEwEfJyzy+x89kuSicSBNeblXFcqZXTdYPLcOdKZTE9tp5IJPJkEgiD0bHa1
      yTJScp9H33yDrh+vP0iS9O0WgRLxOKFwuOm70bEx9san2coWGLGrrD6fZ/rS3JnYsHuFpmmk
      UykyiTiVXBaKBcxiHptpIMsSZbsbbHZMrcaT1XXm3noLt8fL1ovnFJNxsi430+6RQ+2e5ZKf
      9rrY/PpT5msmMzdvMzw6yv5eDFlVGR4eZmxsrKf2MvE4Y97edgwL6WIRlyQSW3xG8cIFPB7P
      sfd86xZALpvF7nAgCAKf/M1/5Yf/+t/gdnsafs/g8HhIlQqERYHS6iLG7MW23HY/FsMwTR4/
      uM+773+Au8etuh9omsb2xjrF3W3IpAgqIiM2FUWSEGwC2FpemlkGCcYnIqR21kgtFvlwJIg6
      MXTqY+0GoiAw6XXjKZQolEs8/+YeTq+P4cnJvtrTTRPDNJH6YFjLuRJ+u50Rt5OF+/e49eHH
      ZLNZSqUS0Wi07T2yruuYpvlGcshG1Go1Fh89IL2yxFaxwtSFC7wTDfHii894+4c/RhAEdF1n
      47Nfc8nvxgwcEPOwzWB7a4uJNi9E03WKhQJPHzzAabPx3sffP9Vn2Fpfo/D8CVFVYtSmgr/7
      BedQVRyqymif3PG0EXA5kDcWGLXZWM70b4ULRoaIry8Q9fT2nOVajVzNAJdK9NI1rrwkeK/X
      i7eNjmJBzuVy1Go1vF7vG7sISqUSe9tb+BI7zI4Nccc0KVSyFCWJ8blr9WvsdjuSzd4k93vs
      NrZWFhgbH0ds8eq+eHif1N4eP5k7R9nVXqEcFDRNo/jsIVs7O6RfKuYHci4ICIgvZV7rO+uz
      YZoYxoF8rcoS+XKl/p5MDqydTSKPCaVqFfEM32WpWsWhqnheWq92F19w8e3bh+a7Ewr5PJIs
      Y7fbCQSDxCNjZFN7eB32429+Cbui8PF4hKV8mZHR0a4tgDIcKFj5fB632/3GLYJUMsHir3+O
      IIjcHDoIkKrqOnFRJfzWTbx+P4svnlPI5wk4HYxIBtAs7jgrpQONv+WFzN28Rezh10w4FHbc
      h+XFxoV00nmRJImqKDEeDBDyuPA6unf3W/hsYRlJFHnn/PSJxjJILO8neLa9x7986zL3Vje5
      PTNBwNMdHe1tb1FIpXAFQ6yvr/Oddw9Mvueu3+Dr//L/cauHBQCQLFcJXX+bVCKObkI0Gj3W
      yiZbL7lUKlGr1XA6ndhstte6EKwxJeNxUg+/4uZQEEEQME2TVKlMMhBlau4KO8tL7Nz9hLgp
      MjxzHnVzCWebOBIHJrlslmDolU1Z0zQ++/WvuOO1UaqCw+1qEgWzmTRb33wJhokIGKKIIEoI
      gRDTFy/1bF4VBAElNMRUJcuTzW2ujY/2PMezw0Oo8utT26z3Yo17O5Njvlhj7NoNqlqJWKWG
      YZooXYyxXC6TfvaIMVVkNZ/j7dvfqf8miiLBcxdZWF9i0ufGdkx7pmnyfC9O+M57DEWH+eqL
      L7j/1V3+/f/8vxw7DumP//iP/8zaeg3DoFKpoGkaNpvtVHSDQqFALBZjdXUFQRBxtYgetVqN
      v/pP/5H1F/Pom6vMBjz1MZRqNbadAURZpvDiCSO1IkNOO8lMBl85z1CHICqXTWVjP0Fkcqr+
      XWx3l/TKEgtbu8xGI+ynUsTjcSKjB1aLVCqFZ3+LMaeNoCIRkkWCEvgrBdZXlilLCl6fv6dn
      dweCPHw2T7VQoFCpEupgx+8Ep03Fpry+BVDVdX69toNNlvHYFBZTOaZu3KJWq6EHIoxeuMjS
      4gKmN8DI9MyRba0vLzFWyWFTFKqZFM929hibnKyLgcFoFP/MBbYzWeRCFkkU2c3m2oaVFypV
      Pl1eJxCOEIhEGBsfJxAKUyoV60y9E6Q/+ZM/+bNWm6umaVQqFT75m59S2lwlmUiwt7pKfG0F
      HE7ie3s8/uU/Ehyf7FrWWl9dJRGPEx0exuPxkNzeZOHruyyubzA2PoGiKOzH9lj/xd8Rsam8
      FfIw4m3eSj9dXsc9PkVof4tRtwPppUgz7HbiUY/OaVCrZeKmiC9wIEbt7+0xVM5yc3wUu6pA
      pYTn0lWcLxdkbGuTYKVY78OCIAgEFAkttsu+Af4evJyyLBMYm2B3YZ6rY9EzldMHAVkUqZom
      SbsbqVxCNHUil68xNTNDMDKE3W7HdHmYu/n2ke1kMxmWnz0hJBzoNVVNQ0snSemQSCYpl0oU
      SyU+//u/xR0IUQtF2drZIWn3EjY1ZKn5naiyzJWRIUgnSAgyXp+f9buf8uCbe7j8AULhCMVi
      EUVRDjF06U//9E//rB2XNwyD4t4ONwJuAoZGWDQIiial7XX2d3exj4wzNjnV1Q5RLBbZ3Fgn
      ny8gABurK8x//RW3xoZYWV2lIkhEh4fJ5/J4M3HGfB4kUUQQBMSX/wJUdQOqZcZd9qZ+u3F2
      qbJEdj+GFIqgKCorz+fZXN/gfCSIaZpsKy4mLh74C/K5HDtPHzFslzs+n12R+eLrewTHJ+uL
      phvIsowcDFPYWsdte/2hGoZpspDM4LerXS3IkN3G8+UVUr4wQ3NXSa6vUioV8QVDVGtVvv7H
      v0f1ePH5O++OW5ubVFcXWIknmQr6cdpUIh43uWSCYqWCtLnC88VljGoFfzlP8OJlJq5eZ2xy
      itWVZVyYLOWK7NUMhmwyoihimiYOVaUS22V9dZlCYp8Rj5tsNsfCvS/ZjsWYPn/h8AKwdoBG
      WDtCanuTMacN62dBEHAoCkMOG5V8DsEfwt6FMqcoCvF4gmcP7jOrFwjWirhVhTGvB9njJzAx
      ye7qCsmVRUbsan2FWw9mEXjY7SSk9i8CeBSJ2MYGm+ksVcNAL5eZ9LpIFUtUhsbQNI1cNsPG
      /DMu2zjWipHJ53EWssTLFZweL5IkHcsQBEHA4XSyvRdDqpaxdXHPacE0Teb3kwy/9zG76+uE
      HLYmD6zFfFqNAU5FJqvYEVJxJowym2trDM3OYbPZSefzjE1NHakjaZqGFN9j2OvCoSr1hee3
      KQjlEpu6iC4rFMplfHYbI5evoqoqoiiiBMIspnJIXj/uYgZfCxNxqQphVWbY5yXidhG1K6ym
      86DpaCaEW/wBdWqqm9aauGnnFzPutLFw9xMyc9cZHRvjqLTKva0thK1VlFIej82GLInMhFRy
      5TKfzy/yL0WDUYcdfK9ktcbxWGMaRFjDmEMhXEywkcnz1siBUhxwOiitLZDVdfw2lYs2FUk8
      fqFJokjUaaMc32JjdYGqzYngdGGLDDM9M9NxAcmyzJXvfczu9jYLL54ilwqoGGgmVKs1TFlB
      lSWiDhvOU9wlNMNAnbpAOBwm4XCh63pXO6tTVShvbzB3boJipcpKrsiNl7/dee/9Y/vNpJLE
      MlnemT6cahpxOTCMAubcTUqlErJwEExoIZ/NEEzHCDjtuHyeQwu0/my6wd2VdXYyWTTDJORy
      4mnwLcTjcRwOB8Le3p5prfpGYgNY+vJzvhPq7E42TJOV/QTC9EUuvnWj7TVLi4vk5x9xNew/
      pFTrhkGlpjW95NaxDDqWZ5Dc9tnWDpfHDociVGoa66UqE+99hLsLd7ylc8HBy5YkiWKhwN7u
      DutffcHt0Qj2U8jbTpbKmBevExkZ5av//B8ZcdqpCSKjLschOduCacJXmzvMBLyE3S6qmsZn
      yxvYQxHC4xNcutE+f9g0TXRdZ3d7m9zCMy44D8vjFtKFIk8MhQ9/+CPEFjPm80cPmc7tI0sS
      pmkiimI95LpVYqjpOl+nihgOJ+OTU+QLBd66eZNMJkP27q/J6uarYDjDMJrMXN0QiigInB8K
      E0jusvzkEbVa7dBDP370kO1kGt0wDnEXURAOcbjTJH6r327a76Z/o8PPNkXmgsdB7KvPiO/t
      HjsmWZZxuVy4XK663drpcjFz/gKCy30qpk/dMEh5I0THDhyE1/7ZH+C68wGjH/0eL0yZx7Ek
      e/nDebmCACGbSsh1sFurssxHszNo1QpGy/t98fw5//gXf87OzjbPvv6SF3/9n1EXH3P+COIH
      sKsKG8+eUG4T2z8yOcWz/WT93VjE306CUSSJt/0OHAIEIxG+/uILtre32Hkxz7DbyZTL1l4J
      thZAcmuDMefx9m6HLGEvZllbWqSEiMvjrcuPNruNhdU1lrZ3cMgSfudhnaFR5jzrZJZuFnqn
      azaTaUb8vo73+BSJ4s4WG3sxkpkMdpcLWT5QrGu1GisvXrCxsUExl8XrD7QVmeKpNCN0n03W
      CZquoxkmFU0jli+yJ9o4f+sO0svFJUkSDqcTRVGITk6TqVRxlos4ZImarjdZwwIuZ31OcuUK
      K9kCgQuXuHj1Wv375flnrN37EkWvcfH2O6TWVph12xAwD+Kejph3SRQJuJzUvIGmUOtUKsna
      wwdM2WUebe8ScbuaxtWOYcmiSKpQYuLKNexOJ6VCgXB6D6eqILeLBm3kwL0ICzZZ5rxbJr+x
      yNLiPOLEDKlEgujYGLMXzvP43j2cDYpRJ9mt0/enhda+rBfTOI5O/pBuFmvQYSNIBSMTY/vz
      DdI1HVt0hJogUt7dJiroRIoOFrfWsE9fYGrmHFtbW4yOHjjKHHqNQQStP8mV8U2fR7HZCUUi
      TLpc9WdKJhNsP7yPIAiEZy8RHR2DaoVEvsB2OgPBIfy5DKMvrXNwIObN7+5juzDHxfevHTKH
      G1qNG8Nh4pFxZFnGP32OpftfsqKLvOs1UGUJm9zeyiYIAuMBH1/OP0WWRKqFAuMXZllfXGTK
      KLNZrnHu4x+TeHCX4S5ioyKSyfb6GuMTEyzOP8PRsKM2LYBG0UAUxb7Cat02FbdNRUtuU4nF
      8dbypPMlrn3nHfRC8sh7T0vsOSk6cateGIQoCoy77IwDVLKYpsmiXkWSJVRZ5rwMxfUFFrIZ
      Lrx189WueEKdxTRN1soac9/7/qHElFw2y+aj+/jKeeZeOhH35x8Sl2Uu3XkX03yHarWKzWaj
      VCqxsbZGensDye1BVQx8N6c5f+ECT768i12ROH/z9iunZblMIpHi3JVbiKLIyPgENqeLGaeT
      xbufsrq5ze1IgLC7s5Nqyiiz8+kv8V6+DoBdVaFwkMiiaVrXL0AWRbb39pBVlY3lJUZCHhwv
      /UZyK8G1ylb9QpYkTEw8DjtXHXbihTRf72fw29S6QtfKZS1O+zoXQau7/yjIJ8i4EgSB2VCz
      rdxpU/Endlj8RiMwOUMoFGLi+k02f/OPjPs7RzRaME2Tmm4AJrlKjaSoIPuDTN66hs1mo1qt
      UioWKeTzZHe3caTjXHDZERo86EG7youVZcJD0QMR9uWu7XA4uDA3h3npUtPcPH/4gJFCks1C
      Gf36TeSX3PXqrTus+oMMDQ+/avul0/DKhz9gqlBg7ZsvyWfyTHpdhxa6YZrEHF5KziBvXb4K
      wPSlOWK7fi4ODRHb2yPYZTiKx24jFAxidzjRc1nco69ySDqKQINAYzthl4MPRsRDaXrt7Myt
      9/aKVuIdZFuNaCw8Nah5Czgd6JkEu+siq8vL3Hj7bcqBCNlSFq/9IDxFN0w0w6BUq7Gwuw92
      B0KlxGI6zzvf/S6Kw4UnEGBuaOgVRy6VWPvkF7j0Gk5V4bzdhuBu1scsvU2qlHn08CFSuYgv
      Osxog8OzdT5m5i7z4mGVkpCrK/CFQoFarcb52dm2zygIAm63m7n3P2J/f5+lR/eISJAtl5kM
      BjBNk4WSRnTuGiOjo/X7bHY7E9PTwIGRYKtQ5sIxEQBwYO6VFAWH08n1idE694eGBdBJ/DhR
      PFBLc+4zKA/YSaa00AuRHvfcjbvkIBauhbDDRi62xfmPf4yiKETOX+Q3f/c3nA8HwO3DEQwg
      qHZcbjejMwU219fJ7Wzx/d//w7Z5DwAbCy+YdijIUvsIS8uJZxgG+9ub+Dx+nKl9bIUUu6qN
      kZHD5l4AVVW5duc7TXRiGAYO++F+SqUSgiDU7frFYpG1T3+J3enkWcVg+spNllYXqRQLTH/0
      IwzDoFAoHIoXS6fT7M8/ZsrTXURtVdMRZRlFUSgJzQxYbhRBBo1+WjyJHnAUwfazkDspyK9+
      76m5nuCRRR58eZfvfvQxoXCYP/x3/92h/gv5POFIBLfbQ/iIZJ5KuYy8v43sOsiV2M8VcKoH
      zrbldJ5hl52Q+8ARphsGTkXG5bCjzr1FfH+P6SPCGiw0js3hcJBMJBiy29nb26tnY6mqSiad
      Zn11hf2dHRSbHVkQuOp3kyqVqUois9//vSM98LVajf0vP+Wix0G3CY2qLLGx+AJD1xlXm9sW
      2xGcaZpH6gDdE2nvFDLohThoT3IjGuvWDKLtcq3Gs50Y27kCxZrG+NRB9GprgjwcKIJ/81/+
      imw2SzgSOfS7JYbous768hJbiRTb6Sw72TzG5RvsD09xP1+lEh7mUUmnUqvVfTNvj0UJ767x
      +d//LYGxia7CXRohyzJD0Si6rpOI7dW/lySJYCiE2+Vmqponmo1xLfrSG++wU1qa5/FXd/n6
      q6+Ix+NtE9uLhQIO8/iE90bYFQVfOc/Sva8OJdkcWmqDtMR008wgibJbJ1c7dKM3tLbb+v9O
      93SDeC7P80QWbXiC0PvfJ/DuRwy/rEqtaRq6rhOLxerXS5LET37/D/C34c7JZIKv7n6BKIrE
      YjEmz52n6A3y9fY+ac1g5cUL1tbXufnRDwiEI9RiO+ykm6s3eOw2fjI7xZNPfsXzZ8/q329v
      bXZtIJEkiSvX3zo8vkya36xuEvV6muz4Uw6VYDbJ7otnvPji00M7QXJ/n9S9z4n2GEYOMOrz
      8J3wYZ9NRx2gk9JjfdfNix1kkdZ+0Ity3S2hNukTPYzjOPGrbMDsD3+Cx3MQ39Io9lo5rYFA
      c8nw1qoHhmFw/949DNPkgw8/4vNf/Jx3P/4+sixz/sIFSqOjhIJBtIXnRMJR7v/1X+FXJT6a
      nWlr0XLZVKYcCmVDZ2NtjUIux/K9u3z/v/m3R8bYd4Ku6zx98phyKoldEtuaeJ8nM9wI+cip
      B4UPVpeW2F5ZwhOKIMV3uejpLUvMgigIbXMp5Hacq9tQiONSBltpqpUQTkPv6NT+SZT5Tgu+
      kwm5HTr9JggCVU0jr9hwVysIwgGxz8/PUyqVOH/+PLVajWAw2DHg0DRNtre3cTkcZDZWGZmc
      RpZlxs6d59Nf/oLzFy4wOjpKMZfl0cNH+Mo5ztsFLowdX1liPOCjltyGJIQEgdHpcea/+JS5
      d9/veRGIoojfHyCfiHF9ONJEZ9b7uRMN4lQVsurB4q4k49xySEjlFEKfxH8UjtQiLHI5Thls
      vKb5t8HKyN2gkx2/nYe3F7QLFhzUM1U1HR0RwYRMOo3X50Or1bh58yCwLLa313EBl8tl7t+7
      h12W0LMJPhgOshbbYm97lOmZGZKJBIViETmXA8OkXMhzrkvrCRyEJTSKKSpwWddZ/vzXTL3z
      Pi7X4fxfXddZXXiBXq3gCYZwuNw4XS4URWFicpKYqpJ88OVBdeaXbVt6p8umki9XKIgHsWl6
      PovsOL0suKaWW8WeTq+32xf/up26HT24PS6CTsQX8XrYSKSYCAWa+juq7XbtuO02rpgmsQd3
      MQyDTUml7PSwv7eHLxDA7fHUFUJN01h8Pk86vo9RqWA3NJRalVGPi+BLu/5MwMuz5QX2drZZ
      ej7PH/zRv8HhdGIYBhMeJ2Ouk4VYK5LEBbvAzic/Z8UdwNA0TLeH0fEJFh/eR66Uuex1YFNk
      8okdSprOvmFS8gYRVBt6bAev0KxHNM6LJB78f3drkyFB5zTLV7V1hDXiJFxOkSVimRxDvley
      6uveCU7aXiMmQgES+QJPN3eYG43WuVmnhXDUWARBIPoyLODA4l4h+eRr1is1VAGqokQVAck0
      mHDaGUbH47N3bHdcK6EUK0SiAdLpNGurqwRCIZZjcYaHg/h7rLjQCkkUGfd5MM0aqJDJxEjv
      bXDL70X2vPJaW1aXCFDTS1RyOdwvazZZIdKtQZAPN7YZuj2FPxRm6blAb5nXvUHY2toyG2Ux
      a2CCILB67y63A/0XYhIEgfurG9ycnqi3e9boJPpY/+8mArXx3na7h2YYPN/eYzIc7KmWTeM4
      Bpmn0NhmVdP4qiazNf8EnG5ETG5evcp0NXco3/lNQE3XeahJvPPR9xEEgWwmQ+bzXzLiOz6v
      oh/UZ6DVhHhAFCcPxHqT0MqZrYV/HGduRKeQ26vjI8Rzedbj7QP+jjPNntZc1XSDaiHHqNeD
      LIpkMxlK+ptzfkIrREFASSe4+9mnGIZBuVxGFk8vZVSGk5sGj4JdVahq2qnXs+lEqI3P0Mrt
      rS34KPRiHj03FCaZL/Bkc4dLI0PHctjTIvrGuXCqCnNKBdtwmPMmPPJ62Y/FmAv2bsYcJDrt
      vJIoMuK0kfT6ePTLn4Hbi2wIHHb1DQZHU+UAtuWqptXT104bx3FYwzCQXo7ltBJvgm4XHoed
      +e09Ai4no4Fm58txYxykKGQh2hAzn6oZJG1OlvcTXBw+LbI6HkfNv1NVSa3MUyoUqcb30csl
      LvmOrjPUL069ypJuHLjXB7kA2snhR9nZe7HXDwKWSJTIF7i/tonXYWdmKDzweegG1oL6+fNl
      bowPI9XKaLKdT1Y2kMSDlNZBYJCL12VTuRgJoQX9B0z4FOesKz/ASeCyqdxf23z5qflBqppO
      pljiB1cu9qSQ9WPCtP7t5uCEXmGFEbdytZDbRcjtIl+p8GRzG1kUOTcUwabIbZ/hNLi/hWsj
      Q/xqaZ3guVkWHj/E5nThHMARUoNyNjbCel8nybfouq+tra2O1LR+/2tuB06varJmGDzb2uXq
      2AhiG0Vn0MkxkiQ1LYDWz71AEJqLdlljtcrNt14LB8FuK7E4IwEfvjYBZqe5AAAKlQr/sJsm
      IprYDJ1Stcr3ZvsXLU5zEZ9VYlRTXSCrrMRZJabLosiI30sinyfibW/m6jSh/UxOu/j9fiba
      ip3vNqzD4ow2WWZudJi1eJJCudpWPzjNReBUVaacNioI3I74yLc9Xql3nMaYz0pUrMsdjQQh
      imLXtd27wVETpMoyxUp1oG12Qut23Y5bHwVRFOtVHVqJ3zCMjrtJ6yKbCgdRZYkXO7FD157m
      ixcEgQmHQiKZpFitnihBqRsT8rcBh6jcMIz631nA67CTLZd7vu+sOIQgCAeHqclyXeRpJf7W
      hdRIHO2YiSAIhD1uxoI+nmzuoLXY5U/z2UJuF1eHI8y3WXz/FNFUGKtXjjgImKZJpnh4AbxO
      ztJI9J0I38JxjKI1PKKxD5fNxqWRKAu7sUPiSOuC6qbuaLeY9Lowgf1cvud7B5n6+SagKzln
      UJp9OyTyBVxt6l+2eqZPkuzS7fgsQpMkqSlK8ag+RVFs0gka/6zvjzLRypLI5bFhdtOZQwTZ
      eJ/RUlnvpM/61vhIXyVXflsI30JXC8BSzvqV+Y6atLDHjd/pIN+HGDQIWFzeIvxGDmcYBpqm
      1TOyOll4GhdO45/VVjf61IXhIWqaxlqbUAqrj0ESnyJJhNyney7atwFnFg111MvLlSu4bDaq
      mtYThz8pR2wkdk3T6rqPReytYRP9iIntdIRO948G/PidDp5t7dbzja1+T2vn+6eON+Kc4Jqu
      83xnj3iugNdhp1StMTscIXgMhzopQTQSF3SW5y0O3kiI3Sy+fkQ2n/Mgjv7p1pmd4I8AACAA
      SURBVA6zw0P187F+R/wnh6brPNuJMTcyVK9P1fUCOI2wXQvXJ0bRDZOxYIBkvoBuGPj7yDnt
      B91au7o1DbfOU7v224kzjd/ZFYUro8Ms7O0T9XkJuNqfm9Du8+/wCo1z+nwnxp5ukqoYyIKd
      cDFLxOnobwcYtDzaGCnqsdvwOuxspVJMhLo/f+s0YRhGk9e3HRp3E8v8aSmu/cyVKIpcGomy
      Fk9SqtbqTrN2cU2NCvvv8AqN83FpZIjRcpldycH5O++QTiTYfvw14pEc/Zg4+Xb3DmKHCLic
      pAqlI/s5S7Ry/nZWKUt/aP1/t0TZ6brpSAhJFFje22+qQ9SI1hr5v0N7eOx2zks6K3c/JRyN
      Enj3w8PFcTvB4mSN8m+rrXqQaEqtPwXO1u1ZBK1hD9ZYLMXWEo1ax3hcYbFeEPV5ydsqPNva
      5dxQuDlIseGDIstIv1sER0IURaK1Mltrq4xPz/SuAzSiE9H3su23a2MvkyXq954qR+tW9m8l
      /k5JNFZg3aAWa+uzu+02Lo0Msbi7j24abSsW6KbJdCTUlJZ5VkFl3ya4bTayL56Q8vr6qw7d
      SQHr10fQeF+mVCJVKDI3+qqs9iAD4npBN55fSzzq5CPoZozdzpssScyNDR95zcJuDN0w6orz
      74i/PUZ9bta++HX70ojQOzG3c/V34zxr/S2ezVOpdXckULd99IpGx1YrGgnK+r0d8Vui0Vnr
      MBeiEZL5Ask253v9Ds2YCvo6K8GCIBybENPLYumWWM9HI6iyzE4q0/Gabvo4CVrt9+3s+RZx
      dxJ7Wu89arwnQTvGcz4aIVsqkcwXjr2/m2f9bYYItDXxmaaJ2aMVqJd4naNevigKHfMDukXH
      9gt7/N+fPmZ7a5ndQvNOU6sW2NzLsbSyfnCQ9sujeBpDIRpjfFY3tqgaBtVSnv/093/Ln3/6
      sONxdolMmpXt5hMjD+bJIJ5OD5zgpiMhCpVqV4ugcTxHfT5rDDosvx1kOJwcUifgNjJtL+jW
      Y9qKeDZH0OU88SKANnK4XkPBYCWeRkzW+LqQxe8Lsbv2jKFIiMcrFW7OuHm+tUHQ60BRXMzH
      isz4YGl5mR3Nzo2oHdM9QmrjBROXb/DehUluXpgG/yR/+w9/zTdbOX4wN0PO5oJCnPHxiyT3
      l3m8vMOP7lzj0UYan8dFObfP7PkrJJJrPHu6StkVZsJRITR+mQ8vd5epdRSRToQCbCVTJPN0
      9Kq3hna/DnTSlQYZANgJotVRN1z7KO7ei5XoOLx7YYZKTWM5Fu/r/nbjaNwRpmfOsba6QrVW
      Y3gogq5pnJs+zzuXLzIzHMTp8PDB9Tm8wSG+WVjlStAAux+7y8/335pjdmqGdHyf6YlJoi8d
      VPX4IcnGj+7cwGV38sG1S4TDw1yfHkFS7cxNTuC1ifgCYSQMRkbGmRuLIJgG3mCUj65d5Nrs
      RXZ3dhlUNsZowE+uXOHrlXUeb2xzb2WdZ1u7LO7tk8gXKFVrHe89C93luD5O3dCxvb1tdupk
      /cE33Pa3L6TaTvw56vd+sLi3j89hH8hOAC/HaGhUTYlapYRqs7OfSDAUiaDXqqiKwl48ic/n
      wSZLaAaUK2VskgiyjVq5QEEDl2xS1EVCLpX9XJmo34Om1UBUMGol4vkKYY8LRVWoaRp2VaVc
      qaBrVWoo1Mp5XB4/EgaqolCuVqlWSlRRsFGjKqiEPb2FgvQSEqHpBoVKhXz54K9UrSJJIpqu
      47LZiHg8OG0qqtxdDkK7Plu9042fBa3E8/0SI24RyebBoXQr5phomoEsDy5Z/uik+CMWALQn
      8k7OsW4WSOs1pVqNpb19ZFEk6HYR9R1/UuJROAk3sby7lr5kiXeN23Rj+IPV33EhFJ3G1Y8V
      rlGE7QemaVKsVEnkC2RL5QOvtmkiiSKjQT9BV/tFeZSS3wpRFBGyG/yvn+/ygykbhuphdHiK
      dGKH3b0tnA4PqmSSrMqMBlwMuRUe7JV4fybEo5VNfvbFc/77P/pnhE5Y4NdCU1L8UQ/TDu1k
      /EZ57igrUTf9iIKAIkmMBf2s7ScIe9x917M86VZqEdjWzia64mYi5MPQNZ4ur3Jh5hyp+C6a
      7GTIpbCwm2Ruagzh5QLoZx56NUcfR/jd+CQEQcBpU3G+TFCy+tYNg81kirX9BIIAsijhttuI
      +rxNJy62ttUOhmGArvPW1AgPVx4zNeQjG5piYz+G2+nmRlTls+UUC1txnLMTLG7X0GUBDBep
      isjti5cGRvzAKzNov5yjXVxMu2v6gV1RmBsdxmO3MxYMsLqf6KudQUHApGqKvFhcBlE8OJ8r
      6OPuk2eUdIlnK0sksgXstTQLidKpWzB6wUlEUkkUmQqHeHt6ghuT41weHSbgcrIeT/JgbZOH
      61u9hcWobsaHIkxHgkQjozx++CVOp4+g14suOzEMk2g4xNzUBA6ni7eG/Pz9N88J+QMIQo5k
      sfciCnBQpbA19fTowlivOaykcYfx2G0s7+2/trEIgoAgShRyaaamp5AEAZfTxjePF3n3xnWW
      FueZmZjBoWgsV228H3HX69yfBL3GW3UKtR5EhKrVliQJ+JwOfE4HpmnycH3ryDEeirtyBDnn
      Epl++w6apjEaHnpVshJ492aoPr7vXpwCIBodPTghZzLSd8EGzTC4m8jhNVN4JJGwx9V9MNzr
      hixJBNwulvb2DwLC+pCRG8WKbsSB1mv0WpHnm/uMGQ4WtQrZTJyaYbAf2+bRZpwZ7GxmYyDZ
      yZZrBJ2D26o7wRKxWsXORrSLXzquKFi381u/7gi/zlFzrSgKiqLULZHt9CjrXbQLQ+llMayk
      c/j8fm5//ANefPM1aZensxIsCALrD+5xy9fbEZmnjVy5zNcr61wfHyPs7f/sgn4WfuNLyRVL
      eJy9z81J4pra6Vvd3tst+gmFebC2yfXJsY5J9o1ttu5Cm1vrPN/aYWb6KjMRJ18/eogvMk46
      tkGqJnFpxMfCxhYO3zgfXG4+BLzXnWwpnWfy49/D0VCV741IiewFHrsdWZQo1zrbr4/CSYil
      8d5+iN9q46RxVp3G1O94GvvoVzzq5okadSKrj9GRMRKZJJIoYpQyPNiMc83mx5BVZr0SNv84
      w5ks4+fHO469FZvJNAkkZt12HA0nQxouNzZbczGwjlramyYaNRLBzalx1hMptB7qer6u+JZB
      +EOOsxQNAr3qGr3A0kHaFVx78OQhineEEZ+KLiqMB4MUijmKxRI7qTwOSSOjyfjV7g0KI34v
      6/EEDw2F+WyR36xts+QMEr1y/ZBh4tTPBxgUmrivw85kOMh2KsNk+M1Im2wHK2aoU1WIRkI7
      zkTab1jJWaJdSM1xGI5E2U6n2RFqCI4Ady5NIdk9iLUCmZqIWxZ5++KFnsYhiSI/nBplfn+X
      pMOFGBlh7sbNttcevQBaHuDrB/cZHR9jO1ni0uQwhq6zuLHGpYlJZElgeS/F7HCIzXgcnz+M
      kzL/509/RnT6Ih9cHCNdMoj6nGQKRVwOG8VyhVIpz/35Vd67c5tiNkF4aBS0EtlCmXAwRK1W
      xu1odsBUNY3ddIa3Jse6lllPYvnoFp366Lfo8GmNuVF5HNSisuR76G23HRkeZWS4cUwvY5Yc
      Kpbb09mHoO6yqdweHz5wpqqdq4vUg+G6GfDb1y7zH/7+U/71+1e5vxWnmEtQy+yRKUuoWp7x
      ITeffLWNPDzCzvIS7127wrtX5hg+N8vf/eynxHIiNy9FiUTPce/pPe68dZPtRBK7bEPL7RKr
      2Fl5+oR8Js271y7xaHkNXdN498ps0zg06+UN5ASD04G15QNNeQG9cvVBEWhrSMKg0egh78dM
      eVq1aO2yjN3sLCofqg7djObvREnl3GgEVbWxvrrEXqbIyMgEilFElkXmN2J4vW7Gh8I4bdJB
      6IAkYZoG4UCI65fO43f7mYkGGRkeJey2IysKilgjW4XdnQ0k2c7E2DjRcJTE9jITk9OHRuVQ
      FK6MjXB3ebVeWLZbK8ppiRGN23+rKNCYJN/unl7Qjy7TKt+fBrH18yxnFWynFzuHhB8Khmvk
      UhuP7nPL2995stYkN5YKsT5bZcaPgl6r8MX8Cu9fn2s/cEHg4foW1ydGm77rBYMUL/oJ92iX
      TH8cjlJW28VenUaQYiserG1y69xUU9+dUkfPquo4QKFSZbOi4Zw6z8yl9nR0iAoHRRSNXLBR
      NjyO8C1Iiq0j8Vttlar9ucRPA8eJM+3EzEHOdWOAHjQ7yM4irt7qo90O08j8GjHoRfEkkSUv
      SIR8XiqZNMrIGFdu3jry2UWLQAcmHpgmz1eWKOsHLyOdivObB8+o6AbzSwssx9JsbW/yyePn
      6Cd8/9OREJvJdEPXb67ptt1ny/PZLdotoFbisoi+neXpNOfnqHMlOukFgxZJQw6VkZlzTL19
      h7f+xR8iO90k4kfnlIiDHoiuVdjej5GrHkz2o9VNIk6Te/NPebCRQAC8/iAuI0+ifLKVH/G4
      2UymDu0E3b7sQU5+N2bMdmOyRMLjFsJRz9Naot26vh1BnjaT6KX9xtpKJ+1zO5VhK1cgsfCM
      TCqJIAhcmJ0lFD76FEyx0TrQL0E0Tryk2BkNeOtlaxwK5MoaxVKRixcus7a9wdbWBo7wJEOO
      kz24IAjcnpk8UebYoK0s/dzXGAfTCxoXjtVOY1Xrs/Qb9CtFtDMO9IPPt2JU3H7Ovf8xw2Pj
      TWM6CnKjCATNVoJeHsV6iGopx8JOAn9thT1VYsgfYHkvxa0rN5h/8ZRoeIy9nRXMfJWJSAhn
      19lA7aEbr47TbOeIOW4C3gSxqZEJWaVWGhdGO7SaHV/3cwiiCG12uW7ilU4ydsMw+GxpDbvd
      zlu3bmO2qxh2BOTW0n6CILxSVPsIv1UdHv7go49evhgTSRKZeWkg+ODWbQCuTh5d3KkX2BWZ
      QqVKvlw5qCrdkrX0bfCgwiuCb2RGoigeiti0uGwjYb1u4gcwjoksPa0xriXTiCPjBBSVWq1G
      ZGiop/vl1m2i3QruN3JSks6G8C5EI6zuJ7ApCplSmalwsGncx5kOT+vlHDWv7dBoSamLlJJ0
      yIrT2m67ZzjquU7DNNqJ0ZzWAjVNk5qu83gnxp1//g4TExN9tXPonGBLMTnppJxF6IEFr8PO
      9ZdhEY82ttANf8fUyXYvfxBj7ZXYO6F1EbSakRuV2kEW4P22oaJp/GJth4qkniikuYlKGie7
      3aHSrdc2ytwnxaDElIvDUb5cWj1TAjipONKoh3VShC3TpoXW45vatdntnFrj/jYtGruiELQp
      3PrgewQiR1t6joIIzZzFUsREUTxSCR70NnrSybfutyky516KRN20OIgXf9I2LD2s3Qn0rddZ
      /TVikGbs17EI+hl7slQhfOkqM+fOYbf3n7QlW+X+GrlP/f8tcme3tvXXxUmsviMeNwICD9Y2
      cKoqsyPRYy1apzHubiwg1nWdiKBdmEo3HuVvEzfvdp4sJApFqucuc3Hm3In7Fns5Fb5VEesn
      /uWsEPa4uDk1gW6Y5EvHH8F6WopaN/FARxG/aZr1+qTWSZZngdaxn7YXuZddQNeNI61OvUBs
      jBfpxp7c7Xbb7YQN0kTZrs9zQ2G2Uuk2V78+WOJON6e/dwotOE108mCfpq7Qy8LeruqMTk0P
      pF+xkQMdrhF6vBNpEG7s00S2VK4fifm6cWAalupWtm5En3522l50gm+Dj6QRhmliOpwHJVIG
      ANFSwBoPdLDQzdScZXhrPwi4HCRaSoTrDWPOFEvcX9ts+m7QaDS1WpacVitO459VaLcxoK1X
      q0636NfkfdqWo05t50plxuauDqwfudWc2WTP7tGt/CZCliQcqsJuOkuqUGA1nmQs8MpPUKxW
      mQwFiWVzjPh9pzKGdkpr4wt+E7y6RxkBWn87SmltfaaTorXfHcnGlZGRgbQNDbFA35aQgX4w
      OzxEvlxhNODn8tjB5OmGgWGaKJLEi90YUz2cSdxrQaZOaOep7reNbr8/Cr0sgqa+eu6pP+TK
      FUIXrg40rbOnlMjj8KYuILuiEPa48TXU8pFEsa4bjAf8rMWTp/oiLd/KIDHI3eIoUauTRcjS
      aRqv7iSq9Uob7a7frRlEhgfH/aHBEdbem3jwb+MvuVKZvWyObAfT4pu6CI6C06ZS1TVSXR4n
      1A/3bwxTPisc9y5aw0D6leu7eef90EXrYhID4a4zCruFrGla3fHVeiqiKzrC/bVlirUaQUlA
      lGTMyfMoqsrOk/vcdBydL9yOk7ypODcUZjuV6XiU0GnCMj6cZVhzq0/nTX438NL6Y+svP/0o
      yIqivKrM2xIOMTQ6hjD2qiSdNVH5fB7RplDT2jsjTMwjS5a8icq1IkkokkQsm6ufsXtm0HUE
      hIHNi0CXXLmlz3ZjOGpcAgK6bqAbBrWXzwBt3r8ggKYfDKzPR8xXKvgmB18ETXa73ajqqyrG
      lvmtUqk0KcaWec5ut+Nyudj2R3n4q3/knFYczGtr9D3UJ8rklR5itshkR/Xa2kbjd+3uE+rd
      ZAyDWLey+sv245qBq1xD4UTv2BpJ44jb/r/1elo4+L7HxUToZKfp9IK9QgV7tdhx0Q1ih4lV
      db734Y9P1EY7NJ0SCSDLcl0UslLsLDgcjvpWPTs3hyJLjP3jX+BoqIPfzgxmAnuGCKLAMHrT
      da9wnBLe+nu3MmWv9/WqqAoohknA0HG8bLrX2JYTo6Eb0zQRFYFZj+3MxlE14WLId2QQ30nH
      4MwW0Gq1JmY9CLTVKARBwGazoapqXXmzHGWlUqn+eWb2IisbNzm3cB+lTWi0CSzUQJ+5SPi9
      Dynl8sR++v8wJA7WRPem4bWalAWhvh7elPkaxDhqooQ8IO9vI45kd4JwkB6pqiqyLCMIAqVS
      qS4OmabJzA9/wvLsDarG4YcsGiaV73zI1E9+H7fXR3h0lPjVOweCTYsSdhzaOWJ6wVkT5KCJ
      zzRNyuVynSE1xnA16m+6rmM0MK1Ww8abjk5WKNXQqfVZEv8o9GyY9vl8OByOppcw+fHvsTr7
      FrWWRbASGGb6xtvNAVUNHOq4eJhB4yz7GjR0XUdV1frJLpVKhWq1Sq1WwzRNqtUqlYp1/pVQ
      v8ay1cuyXBdvT6M+6FHz2hrq0frXeF0nhB02ttfXBjpm6HEBCIKAoih4vV78fj8AmqYBMPWD
      n7A8ehCfbQJF3UQKR1EUpT45oigycuMWD6auUG5YLL3ax0/Dc/qmQ5IkarVa3Uhhma6tNFbr
      s8X9j8ro62a+z/KAv258D4lyhZHx/vJ+j0JfXgVBELDb7dhsNsrlMoVCAQSB6uR5tJ0V5j1h
      3N/7EePRaJ0DAdjtdgRB4PKP/wUvfmXj8vN7dd3hNNDJI/ltXASWXgZ0FGtEUUQQRVRVxel0
      NolGxxFZ67ycptOuXWzRce/EMIymBK1B4UTLXBAEHA4Hfr8fQRBwBUM8nb3B7L/7nxifnq4r
      0Za+0Hg21PBbt9g2XmWgnQY6bbXfVjHoKNSz+BoiShvLFR5HYK+TKRwVVGdhxONi7esvBt73
      QPzKkiRht9sZHR9HmJioE7nNZkPXdarVav1fVVXRNA1fIED+h7/P8ic/Y0YrDmIYZ8Ld34Qd
      pN0YLJFF1/U30M14gE4pnZ3QaE2TBAFfYptnD75BqNUwRRGn14eiqoxOTvU9poEsAGsn0DSt
      rqkbhkGlUsHtdiOKIoVCAV3XsdlsdWVt/NJlCmMTrP2H/51pvXJiwrImrJt2msy1PcbPv040
      JtU0lp5/Fc8DZxef2RtOMneCIBCxK8iLDwk4bAcRCWsa21WdkYn/se9dfWCajiAIWF5l60E1
      TSOfzx+SLa1rTNPE7nAg//hfscvgzHXdJJh3c/2biCaLWsu8Hjgt30zi7xdNeRNA0GFDAERB
      wGtTcIkHpvl+MVBVXxRF3G43Ho8HoG56U1UVj8eDqqpUKpWmM7NM0yQ8PsG+f2igZtFvE1H3
      ik6H7r3C6T572xTNU+3xVb+t/qMhu8LuxnrfbQ7c1mWZSn0+Hx6PB0mSKJfLaJqG0+nEZrNh
      GEbd0wwH3Mv77ockjMGU6HvdYspZ4Ggrzek9f0c/winPeasRw1oIdlmivPi073ZPxdhryanl
      cpl8Pk+5XKZUKpHP5+s6QrFYpFar1ZObh8bH2RuebGrjJLBk40Npnh1zH36bdozTe5ZG02pT
      j2cwf53enZxNUi4fX/qmHc7O2wFUq1VKpVJ9snRdr4dYAPjf/ZBYQ4T1SSb1uHv/KewSp4FO
      h/29LgZimiYjLgc729t93X9qC0AQBFwu16EMnsZDHaydwuPxIIoioeFhdmev13fTXoi0n+Sb
      fyri0mnCcsqdpee4FaokUoq9YQsADibF6/U2TY4VOiEIApqm1R02VtWz4dvvsmae7WQelQ/7
      TwGN3vpe0HgqTD+HgPeLdvqAuLVKrY9DE0+V0iyF2Ol01j9bkaWWW98wDKysNMMw8Pn9ZOdu
      ojc4QbqdrEaZv9cJbmda/Pai+2fo5nyyTmjMN+h1AQyioFrjuxpXBTZXV3pu59RZrRXDYpk+
      q9VqfcKshSCKIoqi1B9q5r3vsSbZ6/db/7Yzg3VD7L14Hn8r0OVjWA40K1zlrDHI3VaVJMqF
      fNN3mXSaF/PzJJPJjvcNNsW+A6wt1qqnYylSLperbgUyTbP+u6qq5OwuKFaOabn3cfzWEPkA
      MAjPez/oVOb9JGOIF8v4h4bRNI297W1Szx/jSe8x5bQTe1hi1x1g9L2P8Qea84qFcrlsWuLI
      aUHX9Xp140KhUI8kFUWRcrlMuVyui0GWXrC9vgb/9f/lnNK+LuZRSu9ZV6NYq2gE8pV6SuTr
      hGmarIT8XBvv/9CIbmEF4D1Kl7g6NXEsR2/czRsLMJw08tQ0TZ6mCjhsCpgmYVXCqyqHrtmr
      GRSGJvGOTzE0MnLgqD1Rz13C4v61Wq2u8DocDnK5HIqiUKvVqNVqCIKAx+NB13UiwyMsegKY
      pXTPUbCvNSXxnxhM0+zKCdYoqnZ7zFO3EASBq0H3sdcMqxJmapPs3goLusBaSj87P4CVQyDL
      ct2Vr+s6hUKhiTOUSiVkWUaUJBzvfkjRMA6JtN2mUP7OzHm6sDh5NzNs6X2vu5iyIAh4bSrJ
      hQ34v35+to4wSZJwuVx1onQ4HIgvEzgkSaqLQaqqIggCo1PTbP/z/5bHQ1NNGWQWBkXkv9st
      eoMl+nxbmcuThS2yf/ccWTfPRgSy0GgGtT5bjjDLP2CFTVtK8ej4BMLEJOuPHlB78YSL6d2B
      Z5H1Ekbd+jwH97xhC+gMhnOWu2ujufWkWNjcZ/Onj3HoB22dufvOihi1clkVRUHXdbLZLJVK
      BYfDQblcbrLLG4bB+PUbTP3Rv+XBhZtUDBPT7JzyeFZ4FW/Ey7+jK138tuw0Zy1aDqq/7XiG
      5b98gKP0yuR75gvA2gWsLDIrkQYOvMRWCLXlG7BgyY5zH36flXd/xKLSvnxhp6jB42DtOCdF
      Jz/FmRJ/A600HnrybSuRMkjE80Xu/8U97Nlmb/HrC+Dg1cuxdANN08hkMthstrqu0EqUoigy
      c/MWFY+/qz564RxWLZ1+YXGqfoj9tBZIo7nx2yqznxS5SpUv/+IervjhxJnXugCsg+JkWUbT
      tLplqFwu12OFGkvhWUSSyWRwx3eObb+fF95viZaT0tZpEqe1ME/LAqPVahyneKTyBUwgk8uh
      tXnUYqVyyJpUqZ68EFa5pvH5f72PczPb9vfXtgBaxQNFUeoij1X/xmazNXFGy2kiCALWq1xP
      xPnZwipP9q2TIHWShQrxQhHD0EgVX255hsZaplAntPX4Pr9cWqf4Uhky9SrPU82u9FfQ2Egd
      JO4nC4cT+Ftpt7UaxZtgjj3N/kXh+Irff/7rTyjWNP7yH37BXrHMbx7NkyuXebKyyvxuglgm
      x9/9+lfcXdrk6fIS68kcXz55wpeL61TKRX79aJ5ih2rknVDTDT75xROUF/GO15ypFagdTNOs
      J8mrqlp3lgG43W7S6QPCtkxvuq7jdDrZcfmgnCZRLKKbJulKlZ/PP2ciGiGVrPLl7gZ/eG2W
      fF7jV8sp7kxG+WJ5k2dOJz+enWQplePDmUm2EjFeJHNM+v1slKvkKmVUXadiVImls6gOJ+M+
      L0/X93kRcBNRFAytyr3dBLenpgjZu5/CRmtTu0A/QRBeS0zOSWGXRErVGi5b58K1cyNBvnm+
      RCAUIZvNki9n+OzhMorfg6OaoqBpjIXChEJ21hMK+xsb2GxOonKZrzYTFAsJPlsO8KOL0a7H
      9cXdF4j3to7cm16rCATNBZ+q1WpdBi+VStRqtabapI0nLOrug/LfsmLjo3MTlEolAh4PFwIO
      aqbM1dEhInaJYg2GXDZ2snmmIxHCNhnTMNB0naqus5kt8s7kMPvZHKYJ2UqVWL4IksLNiIuL
      4+NUKxVmhoZQ0ClUaqykMiTSGXYKlkJl1q1A7f4a0WjdanQOtVbift2wGE43uokiCmjHiFeB
      0Aj5Qoa58SHyxQKKquJSZaJeNx67HY/dhsupsr6XJrm/ganYoFbicayAS6zhcDhxyd2T64Pn
      G5Q/WeG4OsyvfQeAVyXZLQKwyqtYlSZKpRKKopDJZACI7e0xvLuGKcGYy8Gnq1tcHR3GKZmA
      wsVhkWzRIFWTOBd2s5QoMx0KISEgmAdRqO9NjXF/J87bk2M82N7n9sw4uZpBIp3EcPgZ8Thw
      CDqGIuELBljaTzAdjuASwTRqiLKdSXdnjve6RR6Au/MvyOvw9vkZCoU8Eb+PTC6Ly+lmORbj
      wlCEWrVCFYm9+C6KO8SEWyGvwfp+nOnoEEG7zHamSNhtRxIFKhpIokmhWERSHdhEk1SugD2o
      4XN0HsuViTGuTIxhmuZLfW+sQaR11xnfxEs90PIVmabZ87FIK3sptv/6Kc52ykYL3ogF0Gim
      E0WxSSluLeqqaRrLn3/CkGRjmApBj5cfeJoPgwi7JcLuofrnO+5xNE1r1YeJdgAAG7FJREFU
      OvfAZXfw3pQD0zT57tQohmEQtktERoabxgSA08HtqfHmPrwtR6qax8vBZ4aX3DvicRHfz1At
      l/j54ycEfVFS+TQfXbvCo6VFEO0U0zt8upHmO+M+/M4AX7xY4/zEGIlsjnS+DHqR59v7TE5O
      E3WIJCoCIbtCKrXHagEu+Z2ggxIdZbTLMzkkSaqLgq27TKvlr1erXCJfZP4v7+Msd7ebvnYR
      yIIVK1Qul1FVtS4WCcJB0S1ZlnE6nfz6r39KIZPmslnpKR/Akq+tDDQrQrWx3Hjjb73iNEm/
      nW/hOBiGQc0wUAWNe8vbBAMhTENn3GNnfifBhZFhUoUsO+kyIbdMxONhL5MHU2c/XyTo8xJ1
      OXA6HFyanuKD6SEe7GRx1TJ4fR6SeROPTcDr9nA+4KVNpEpbbO1u87P7j9jLFfjN46c82Iwh
      CAJbu5v8w/2nxHMFfvloARGdzx7Pc3dps+n+oxJ4SjWNuz99gDPRfZ2gN2IHsCBJUr3OqM/n
      a0pV1HWdhW/u8e4Pf0j2//jfUNqESbfDcizG03SRWwEH38RzRDweqpUST/cz/Pt3rlMsFri/
      lwRRRK9Wcbs8yNU8cV3iO5NjBGxvxhRZHPM40apxcVycmODixKuKyq11QgVBwJgarfsIZkwT
      QYjW+2r0iwiCwP/wzpX6Arz08Z2mfgtd8oxoMMhGIkEqb/DuxXN8vrAFDLOzn0IQFUBG0k0Q
      FSbCPp7tZw610W4OdMPkk58/xrGc6m4gL/HG7ADQrHhZ/7eg1WrE4vtUyhUiUvee1XNDQ/hV
      kWRR54dz5xB1gztjEW5PTaCIIl6XC5ckMOVzsVWqsJ7JEvJ6Qa8SKw02Iadf9GRG7SIm3+Ki
      giDUq3JYPhlL1LT8M63fdaoL1OnAxEPXGTAe9JJMxflkYYPvXjkPwOXZWe6M+VhJZ5EEMA0d
      t8fL/9/euTbJcZ33/Xf63jOzM7MXLIBdACQIggBJkBSpIkGJMmPKku2EtstlpxzLkm+xk7hc
      lXwCvfAnSKXyJpWqJG9VlVScqsSSKdoUo9CkeZMgkKBIXEgAWlx2sdjF7M69r3kxe3rP9HbP
      zl6wWIL7rwJmtqf79Lk8z3Oe2zmnk4oP5G30+96ZT9HP3NhwGtSuYoDanTu5A+24Ll/5lW9i
      WxZvd4dVOWI+vnGDD2/ewnZ0Xv/kMobjcuF2jccmR5mvNzh3bYYrTY8AnUnLwNQ0wihCxKBt
      +hyyrWEjKRRr7hvAKCoR+36Xdz+7RoCg0Vhmtumj6zqfzMzwo4/Oc6cbcvbKDHU/YnbhNhfm
      l9BWiD+bAVaDVoPqXFuu8entNscPVokCn5//4iZnPr1Ks7nMB7MNDhQtal6LC7MLXJy5xtGD
      B9ft3Y8vz7L8fy+t6/HJwo6sCBsWZ//+FZifg8MPMbZ/P2NT01w4d46nT58G4Py5c9TrdRZm
      b/LIx++zT2lxOgdoGIk5W29wYGTwQor1IITgajegWu9seEXYT65d57GpaW7Wl3E0namR4lq3
      aRSw7EPFXvWKqO9O7lPcq5cnRjk1Pb7mPvXZ186cxSxWOf3QId77+AOiwhFePNZ75meXLmNY
      OsWRMWbmZomFTlGEPPrQMYpGdiN/1ox45sgU0J92kae6bdfy1GsLy3z4vXcoNDYXNd4dCu4K
      tLkbPPiLC7Q/+zlXvJCZGMovvJT8fvDIEeb/83+k6wfUY9inPFuPYCGIeNBa1VnX6+CtEj9s
      3t0ZhR4N3+dSrc5Cq4ETh1xYuM2xsTE+qy2xv1zixu0lqk7Me4sRv3V0go8X7vD09GHGrPWS
      2vrrlFVHL9Z5ctzl+++fJdYiao0FXjw2ThR6tGKdCQFl18XUQDNMCrogyEj9lv2sx1Hf3+q7
      88Ziq0yw1Ory4f8+s2nih13EAHEcE1XGeyeCC4FnOZSjgEPPfTW5x3EcFh58hPkPzmCLgP2O
      TlET1MOYt4TLV4zN7xK8FRQ1wXwUc0Qffgq4trjAgh9RW7xDxTGwLIfHRxzeuDzDslVkNAyo
      FEZ4ap+JZ8CtRp2lZoNrTY8xa63DPZHyQ77/1PQEZ2/W+MYzT1HWulxcDPjo+i0Oujonj0xT
      osv/O3+Bhw4dolGbZ9E3eTQjEJUm4Kwot3pP2u05rMctXVYnCHj7h2dx55pDtnh1ZlLrs2sY
      QAjB1LOnuX3mTW6h4xs6UXWUcmXV325ZFqdOnODtD36CBnzUjXjW0XirE1MLGxRH9DUuw50I
      SI0bGm8B0zEMywO2W+a3Jw4y32z2TlmPAn42v8xLx49x5uYcY7aLZQkiDPDmGSsX8MZ0DhUG
      HxUqlP8hvw8O7z/A4f0HVv4q8PC+CD8qYelacu0bTz7a+zo2sm57/JWUdlgr9dNqm7orxLCL
      4tUy/DDkrVc/wD5/e0PWl8wjU7FrGACgOjbOxUefYeLiOQ7S5bOVpZEqKhMTHHctPumGPG+E
      nGsHXPbgsAH/2ArR44hHHYPRDYTNtwPTlk4YROgMx3j7S8XkU24YvH+kTBzHPDt1ECBJ//jy
      wUk0TePI6PDDlbU4J08N6X3qWCJec2+WnZH5voxy5bOqlE/Xa6O7QvhhyBuvnkX/YHboZ1Sk
      27CrGMA0TQ4+/SwXPjyDa8J83DtZplRa1dUnpqbx//BfUfjef+Mzw6FhuUx5XdyFOZ4vGJii
      v0k7NQs8WXa40g0JGl3Giahqw8smdeFPmuG3c8/NYTxK6vf0+oZBjGQJCKMIXZHu6efy3j8s
      E3SDkDe3QPxZ0L/73e/+1UZzLe4mKtUqc1ev0KndYaTT5GqjxZETj/Z13kilgj91hPmOR21x
      gUKrwVesiI/aIVPrGojbC1kvTQjGDA1MgzkhWPBDJgYQ3NmZy1z2NMyww/s3bnDHF1xenOej
      hTrHR8ucvXGdc7cW6MQRb1+7yVzbw+u2eP/aNYojY4zkeGMA7hQc9pezV8xtpY2QPwvc7vpM
      VKpomsgk+Lxr8t96DNANQt569SzaB7Pb6nTeVXEA6EmDR1/+ba5isp+Azs3rmfdNH32Ik088
      yclnT3NwegoBLIdRz4hWBimKdzZDZ8LUOFWy8CyD+oCZ57F9E+gCJgou9a7HiOtQNrQkkKUT
      0wlDOq06x6YexNFiDlXK2HaB0SGj4FvFhpaURjFyg5Ss/B4ZhZY5XhuBH/Ykv8gh/s2uwBNC
      7D4GABifnOTJl75OBFyNdRr1euZ9Dxw/zolTT3Cr2WbGC5nzI/7HnQ4/ba26xboxfNC5e3vR
      rC6M7x+EUyM2V5Q1uP2/x5y5OcvZ2TmuLDUpOw63lpa440V4gc9Cq00zDCmaBoHpcP76FRoB
      fP/8RULAHzbx5i4gnyniJAYno7WS0FU1Li/AN4iIz1y4jj5A8m9GxZX12z26TwrHf+klLoQR
      7quvcPbdd3jhV76R2Ukj5TJVy+TS1DE6ly4QIZg0dfw4Jorhihey7y4bxFnrgC0hGLVN2q3V
      LRNX7RHBc0eP89zKvQ+Pq/tVxlyvNzl9+IHVS9JZw8G704ANII/YSqaOF4bYht7n/UmntKg5
      RqpaNMhWC/y7t05iV84A0OuU4//k6zz21RfQf/FZ7zT6DGiaxpd+7w944MRJqhMTdMOQd5o+
      QQzvtXzmgpjCDu2Tk8ZBW+ctP+SjGPwMr0o2BIfK67sddxssTeCt5AOlJXy6b9QZImuW2Ens
      WgaAXqc88vVfxW/WefsHf5NrKFWqozx1+nme+OavY5RHuREK3m/5tDUDXdP5uHtvtuNzNMHX
      95dxbBMvjlciqYOZYDP67G6AEKurwoYh7PRJl7KMncauZgCAYrHI49/6E2pLS7mzAPS2WXz4
      xAnGxkbpIBAISiLma65g0hAshNm6+t2GrQkeLlnMuxY/DTcW8NmNyHVl0nODbqR/ZVulYLsX
      DLBrbQAV4xMTvPjyb+C6A9bcAQLBQ4+fYnRpAcPv8CVLEAMP2/qWty3ZCkwhOF60mbRNZmot
      Dimuwt1O8FnIIlRdE3QzUpUHtU9VhdTzI3YSu34GkJicml53bWihWOS5F77G7clpDhuCf2j4
      yR406pjt5EygGoRlXRA6Jm8GEe1oWJvg8wFdCMKcDYzT6zzSv8vPzW4qthV8bhhgWGiaRuHm
      DBetEYINRD53CseKFi9MlLip3187tZlaPgPIf+pCnCzci63T7zsGME2TZ//Ft7FPPMbjjo4p
      1slh2WEmEIApoFy0WbiPZgFD09ZsCqBKfLnmOg/qFo47ifuOAQCOnXwUs93ix8tdZr2QCOgO
      CB4Nu/pqs8hiwAOmxoJj0bhPmMDWNVrd7CWkaUYYROQ7rQbdlwwQhiEPPf8CYaHEG3WP15a6
      3PQjGmHP6KqHMRe72dLobjODipNFixuWkcwEEp9H1UgAYdjvBcrakzT9N/TnCe20IPhceIGG
      RRzHzF2/zqevvcKtEF7+zh9x5d1/5P1PLjDX8TFCn2+OmDSFhk8v8vh+O+TLro52lzs+KzCk
      C3hsxObdxZCx1P33wiDcKvISYPP8/emI8R4DbBFxHDP7/f/Jk4s3CeKYi6/coXT6l/inT32Z
      ucufsvjOP/CDesADlsbpQq/pXTH80vet1k2VdCpRPFZ1ObvY5Cld2/o20/cQtpbdPgm1/XKf
      16xFMzuJ+0oF0jSN6Zd/h587Fd7pxJRr8+x79a/xf/R9Lrz3LlfDXspyK4p5p+nzSTfC0QTL
      ESwF/dPy3RgQNUKqSrqSJpguu5zVBN7nmAHSK7/yJHraNSrvT6dH7ATuKwYA2HfoMOO/+ps8
      4hiUNBgzNI61anzLDfnTssazBZ2CJrgZRLzejli0XN5s9xhB7fadnoqnbIOnKy5Xdtt5YxtA
      3t5AWblBeQttNusKHXYj3zXPbeptuxz7Dh3m6sg4LcNmfiUSpgmBKQSTuuDFosFXCgZV1+FW
      o4UroBHFeFHMz7vRjkshCR2IjXt3jNFWmT6Mhs/a3O7dsPM2zFoP9yUDlMtlvvYX/47Kd/41
      1+win7QDwlTnHDY1Thw5wi9/+49ZtIvc9EJmvBDusfEZKSOy00y45fdt4Pm8d+1km3ftgpit
      QojeiTP7Dx3m5B//Gy6PjPNmM+iLBQghODF7Gddr88iLv0yjUOKdQMddCZxt5zBkhf/zcmZM
      XefeHiW9eVj3KKV5s7hvGUDF5P79PPfNX2OpMs4lr3/KLYqYmdf/jqkjR2iO7efAoUOcb/vM
      eCFvets3C2xEqrWCKDkUfLMz0b0yo01NEN1FCb5ZPT8PcRzf/wwA8MBTT/PEiy+x6I7wbtPv
      I5CjzTvMvPE6+x45ydf++e9z8tde5vz4NBgmtWDnZfHxosncPVzyuBXEcYx/F065iQyNVtHa
      dtvsC8MAQghOnX6e5//8L5k5eJQf1f3EJijrgidnLjD95g/59Id/w+jxk/yzP/8L7KMPMx/u
      PCGWdQ3PtdZEhz8PEHG87lFJm0H1wUMc/O6f4RvZGaVbwX0VCBsEIQRjE/v4vT/9l/z4v3+P
      2vWLNEK40fE4XTQZ0wTVq5/ws1faWL/1u1iVUW6Xqoh2g+1UKgSrtqIcR1WoCcB1bM6jseiH
      ZPqExOAqzfkRF+qd4So0ZNOEWN/Gne36dBfrFMzNkZXceTT9moZZ4InHTvKLss3onc62Zo3u
      qt2hdwpRFDE7M8Otq5ep/vhvGdNFQozzpsMPI4eDx0/w7HPPYVsWXc8jCkMQIvHSx9CjCOUa
      qd/i1b9WIPA9D9M0EULg+X5vU6yVcpBlAkLdSYEVe0BkLKRR7u/fdyIVmGIwrYsVCk/KR0lR
      AJqtFsXC6l5DWWWJ1G/pwNgaKJKg2WxSLBaTflPbaZomtm3zt//2rxi/sjCgFRvHF2YGUKFp
      GlMPPIBpGty4egln5hKFlcHe53dwvIDxiQls26ZSqbC0tITneUNv5aFKqKy0ALmwx4gHHwCn
      TvfD5MpkBZuGRZqx1Hprmobp+5jKoeVqMCsv2ptXt/Q9Qgg8z0sO61D3FpXxgna7zYPfepn5
      n5yjee4SxcUWehDRGC9idHxKS50NhxBjvqAMILFvapqJ7/wZb7z2GtbMp4xdv8IBLeIpPJa9
      LsVisW+9qjpgeYSYlwOz2b1r5PPqNZVI8ghro+8blLuzmToO01fq9SAIBjJwFEU88KXHefDp
      UwghOP/uT9ENg2eefoJWs8Xr/+G/MP3hdfQhbaduwcL6za9+MVWgNOr1OvPz89xZXGTm0kVG
      S0Umjx3nxIkTNJtNWq3WmrO1BjFA1tQvrwVBkEg6f0UFypKWQog+5pPlyFVVWYQn3yPruhWD
      MV3vdrtNQVWBUnVO7/2z0e1OFhYWqFQqGIbR93xa389jbtM0+T///j8xOjGB8YN3cfzecy1L
      w/V7J/6oaD1zjOnf//U9BgCo1Wq0Wq3kTKwoinAcB9M0iaKIer2+Jk8la2BVos1SJSTRqwyQ
      VoEk0aazJVUVKMsfnl5bqxJgHrNsBO12O3dTgjSjzc/PUygU+s5/9jwP3/epVquZfdfpdJIj
      cdU2hWGIpmm4bu9I22azmR9FjiJ0w+DSRx8z81//GmffOEe//TIX/9ffwVID/JDixZuEhkbl
      L3+XsUeO7jEA9GaAemr7RTmgUup1u9016bsqUaoSU/2eJj6p68LqqY1ZTFAsFpOZR15LM4GK
      tGTMkpR5M8IwKloeA2SVOT8/n9zfaDSYnJyk0+ng+z7FYpGRkeyNv1qt1ppZJgxDSqUSuq6z
      vLycm/Oj1kHTNDqdTrLrtuyrIAi4ffUaputQmZygWq1+sW0AiUKhkAwQ9G/VNzs7SxiGyamJ
      YRgmp9YXCoVkxpDSXxKsnMrL5bWnR8uyVSmvDqAQYt1NZNOMli57kBqVVVZW/TaLarVKqVQi
      jmNGRkawbRshBOVyeeAslOXeFELQaDTWfacqaOQYqbBtm2q1yvT0dF/79hiA3vnEtm0nDKB2
      ptTRpSrUO2HRx3VdfN8nCAJs2068REIIut0unudRKpUyPUfqAFiWRbPZTCSflO7DMEAWE+QR
      c/p++Vte2YOup41V9ZqctYrFImEYJu11HAcYbBPIfYHUE2Sy6pL3exbjWpZFtVpNTqdPt32P
      AVaQlhgScsqW7jhVukopLlb82JZlDTzsYpArUB14OaOoA5omNPm37/vEcYzneRSLxeQZ1diW
      z6UN+c0gzURqXeI4ptPpEMcxvu/T6fSCcYZh0G63GRkZodlscuDAgUz3b9ohkEXggxg4TfxS
      6ut6for5HgOswLZtDMPoc8dlqQ3pAZCdrp5ik6WaqNfTU71UwRzH6ZPU6eflTKQatt1ul06n
      Q7fbpd1u43leMpsVCoXEdrFtm06nw4EDB7bFO5SGrI9UCYFE6gNUKhXiOGaQvSkZV9f1NYwg
      y3Ych1arlfm7imGIP4qiPQaQkIanagyrEihNlKr0zyL0QTsfZMFxHDzPw1oJNqXLVVUZ9bA3
      wzAwTRPXdfFWosxSPQvDENd10XU9Ucm2su9OHvOr17IM3PXiFhJS9Us/qwqOdrs9UEhIdatS
      qSSeNqBvNpTG9fLy8h4DZEFVQWCtvq0iS/deT3fP2wNT13UajQblcjlzgFVCkpBql5Su0oaw
      LKtP3VG9K9uBvBkqCxsxqFVGH1RWenzkNcMwKJVKdLtdWq0WYRgms08cx7RarcQlG4bhHgNI
      CCGwbZtms5kZfFE/1Wfk9Sy/f9578ow4XdcpFAosLy/3SdK05JRMpH4fZORuxf+vvjOv3K14
      jFTouk6328W2bWq1Wp8qJ9unCg/5XT4jPxcWFvq8cc1mk06ng2VZeJ7X9849BlAQhmFfICst
      cbOIYNB3CZWB5DrYPOLRNA3TNNfMEul6SNesWoYaJ0i/P0tybgR58QP5uR0ZmlKCA4ldI4No
      Uj2S3jbbtvucEkEQ0G63mZyc7KtLGIaJWrW8vNxnl8AeA/TBMAwsy8L3/cS7kidFVV1cJSqV
      SFXdVUY01d/ypvthVYCN/J5Vv6x7h2GO7ZhR8uC6LlEUMT4+noyB3DpdErzv+4kx3el0EqM5
      S81T+9FxHHzfTxjWMIw9BlAhjSbZOZ1OB9u2h/I3Q0/ayEFTDWT13larheM4maeWS0gpmKV6
      pQl5PZVLvTcPWepb+hnf95MZZz3340bqkPWs4zhrXMpxHCeGrGQSWHVfB0GQaUCn+071Qvm+
      v8cAKlQVBXquNOlPl4QsB0L1WARBgKZpSUBNJX4Z0JIS37ZtGo0GruvmEm8QBFiW1efuzFJh
      0nbBoL+z2pp3Les5XddzYyUbwSAVMa1K5c1iWW2V+VvyvryZVS1H1/U9BlChGlmS0KIoSgwn
      acB2u91EX43jGMdx1rhI5aBkDVapVKLdbicuzzSknhsEASMjIwM9H+r71Ovr6fqDZo48fX87
      VJ9BNoq0wbKCZCpRp5+XBm7WM7J89V1q2/cYQEGWQSr1SjU1QfUpw1pJLO9LM5K8T/X3Z0ES
      vWmafdmj8l0qsafP10oby1muwt0G2SYZMc6bvfIkuwwk5vXpIBtrjwFSyIoBpE80zJtaB92j
      Xk9LIQn5Tqn6CNFLBJOqx3rEm1X3YeuV1548z1IeWq1WErFVPTQyGp1XjuwP13XpdrtrvDXp
      +9LXVMM43Y4sVSphuqFa9QWB6qLM8pZI5OmxWR2elsLSdkhHJtWyVSaREeK8FAI5+FnX8yRp
      1vX1rskEwPUgXZa1Wi3xqkkmNgyDsbH0RvCr9R0GeSpUOsKdpy6qz8DeDNCH9GKW9Pf1oEqW
      vN/SefVppknruTL7VDJNGpJppbcq771q2RLrrSzbSNslpF0k08eF6KWYpP32WRjGo5UHlQEa
      jUafkJGxFZmurtp6ewygYKPBnDyDM48QJWFk3ZsmDFXnd12XVquVpDzILEvJGEKspm0PUlfS
      9oOarpzXNvXvYTxLMiNV2jHSR3+3bZAwDJNIsAyeydyobreLaZrJ6rQ9GyAHUpqqRmx6Nmi3
      232Zn+nBlRJHXlclU7fbTfLk1ffEcZzkpxQKhcQbYtt24hUxTZPl5WV0XU/84K7rEoYhzWZz
      IOGrtoHq5RpElFnSeD0irtVqyaqvIAgSvVx60izLolgsDnQAbBayXzudDqVSKdnQQHrrZD3U
      ft2LA6SQpfqo12QofX5+PskrkUlnsrM1Tctd8idXkpXL5TXMVavVkv2CGo1GksNiGAbVahXT
      NPv88GqqhExBzsr0HKRSrOcmlc+rAkG+L+tZGf9ot9tJCoKMj2iaRr1ex7KsbWcAVV3UNC1Z
      wC/rWywW19wv4xp7DJCDrOnetm1arRau6yZrB+K4F5qXeqaaf55WaUzTpNVq9Xl55OfY2Fiy
      XrharWIYRub61zyPxnoSfZAKs57bcVi1pVKprCkvbeDfTcjybdum3W4PXHsgYWR5EL6oUPsi
      ywh0HCcJegFJBqJctJ012Oky1AUjKoENkox5RCSfz0u7WK+sYZFmgo24UrOwnq0l4yabgewP
      x3ESmyCrTvL7/wdjqAomCkQ99AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SOx_alberta' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SOx_region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='electricity_generation' width='192'>
      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
      kM6FD3iEoYAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='transport' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
